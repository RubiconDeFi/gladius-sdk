/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GladiusOrderQuoter,
  GladiusOrderQuoterInterface,
} from "../GladiusOrderQuoter";

const _abi = [
  {
    inputs: [],
    name: "OrdersLengthIncorrect",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "order",
        type: "bytes",
      },
    ],
    name: "getReactor",
    outputs: [
      {
        internalType: "contract IGladiusReactor",
        name: "reactor",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "order",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract IReactor",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapper",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "contract IValidationCallback",
                name: "additionalValidationContract",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "additionalValidationData",
                type: "bytes",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract ERC20",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxAmount",
                type: "uint256",
              },
            ],
            internalType: "struct InputToken",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct OutputToken[]",
            name: "outputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ResolvedOrder",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract IReactor",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapper",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "contract IValidationCallback",
                name: "additionalValidationContract",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "additionalValidationData",
                type: "bytes",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract ERC20",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxAmount",
                type: "uint256",
              },
            ],
            internalType: "struct InputToken",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct OutputToken[]",
            name: "outputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ResolvedOrder[]",
        name: "resolvedOrders",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "reactorCallback",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e27806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063585da62814610046578063630dca1b1461005b5780637671d07b14610084575b600080fd5b61005961005436600461068d565b6100c5565b005b61006e61006936600461081a565b610146565b60405161007b919061095f565b60405180910390f35b6100a0610092366004610a89565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b8151600114610100576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061011557610115610ac6565b602002602001015160405160200161012d919061095f565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040848101518501810151815180830183528681526020808201879052835190810184526000815292517fe767b79400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169263e767b7949261023092918791600401610af5565b600060405180830381600087803b15801561024a57600080fd5b505af192505050801561025b575060015b61029c573d808015610289576040519150601f19603f3d011682016040523d82523d6000602084013e61028e565b606091505b50610298816102a3565b9150505b9392505050565b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561031f57815182602001fd5b818060200190518101906103339190610d1f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561038b5761038b610339565b60405290565b6040516060810167ffffffffffffffff8111828210171561038b5761038b610339565b60405160a0810167ffffffffffffffff8111828210171561038b5761038b610339565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561041e5761041e610339565b604052919050565b600067ffffffffffffffff82111561044057610440610339565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461046c57600080fd5b50565b600067ffffffffffffffff82111561048957610489610339565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126104c657600080fd5b81356104d96104d48261046f565b6103d7565b8181528460208386010111156104ee57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561051d57600080fd5b610525610368565b905081356105328161044a565b815260208201356105428161044a565b806020830152506040820135604082015260608201356060820152608082013561056b8161044a565b608082015260a082013567ffffffffffffffff81111561058a57600080fd5b610596848285016104b5565b60a08301525092915050565b6000606082840312156105b457600080fd5b6105bc610391565b905081356105c98161044a565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126105f857600080fd5b813560206106086104d483610426565b8281526060928302850182019282820191908785111561062757600080fd5b8387015b858110156106805781818a0312156106435760008081fd5b61064b610391565b81356106568161044a565b8152818601358682015260408083013561066f8161044a565b90820152845292840192810161062b565b5090979650505050505050565b600080604083850312156106a057600080fd5b823567ffffffffffffffff808211156106b857600080fd5b818501915085601f8301126106cc57600080fd5b813560206106dc6104d483610426565b82815260059290921b840181019181810190898411156106fb57600080fd5b8286015b848110156107ec578035868111156107175760008081fd5b870160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181131561074d5760008081fd5b6107556103b4565b86830135898111156107675760008081fd5b6107758f898387010161050b565b8252506107858e604085016105a2565b8782015260a08301358981111561079c5760008081fd5b6107aa8f89838701016105e7565b60408301525060c0830135898111156107c35760008081fd5b6107d18f89838701016104b5565b606083015250910135608082015283529183019183016106ff565b509650508601359250508082111561080357600080fd5b50610810858286016104b5565b9150509250929050565b60008060006060848603121561082f57600080fd5b833567ffffffffffffffff8082111561084757600080fd5b610853878388016104b5565b9450602086013591508082111561086957600080fd5b50610876868287016104b5565b925050604084013590509250925092565b60005b838110156108a257818101518382015260200161088a565b50506000910152565b600081518084526108c3816020860160208601610887565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610954578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101610909565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a08401526109db6101c08401826108ab565b90506020840151610a196040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a0860152610a5483836108f5565b925060608601519150808584030160c086015250610a7282826108ab565b915050608084015160e08401528091505092915050565b600060208284031215610a9b57600080fd5b813567ffffffffffffffff811115610ab257600080fd5b610abe848285016104b5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000845160406060840152610b1160a08401826108ab565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b4c82826108ab565b9150508460208401528281036040840152610b6781856108ab565b9695505050505050565b600082601f830112610b8257600080fd5b8151610b906104d48261046f565b818152846020838601011115610ba557600080fd5b610abe826020830160208701610887565b600060c08284031215610bc857600080fd5b610bd0610368565b90508151610bdd8161044a565b81526020820151610bed8161044a565b8060208301525060408201516040820152606082015160608201526080820151610c168161044a565b608082015260a082015167ffffffffffffffff811115610c3557600080fd5b61059684828501610b71565b600060608284031215610c5357600080fd5b610c5b610391565b90508151610c688161044a565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610c9757600080fd5b81516020610ca76104d483610426565b82815260609283028501820192828201919087851115610cc657600080fd5b8387015b858110156106805781818a031215610ce25760008081fd5b610cea610391565b8151610cf58161044a565b81528186015186820152604080830151610d0e8161044a565b908201528452928401928101610cca565b600060208284031215610d3157600080fd5b815167ffffffffffffffff80821115610d4957600080fd5b9083019060e08286031215610d5d57600080fd5b610d656103b4565b825182811115610d7457600080fd5b610d8087828601610bb6565b825250610d908660208501610c41565b6020820152608083015182811115610da757600080fd5b610db387828601610c86565b60408301525060a083015182811115610dcb57600080fd5b610dd787828601610b71565b60608301525060c09290920151608083015250939250505056fea264697066735822122075209481528e1df6a421b9d3bd2d0623326690fdab52b8d54756cb9bdc96ffce64736f6c63430008130033";

type GladiusOrderQuoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GladiusOrderQuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GladiusOrderQuoter__factory extends ContractFactory {
  constructor(...args: GladiusOrderQuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GladiusOrderQuoter> {
    return super.deploy(overrides || {}) as Promise<GladiusOrderQuoter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GladiusOrderQuoter {
    return super.attach(address) as GladiusOrderQuoter;
  }
  override connect(signer: Signer): GladiusOrderQuoter__factory {
    return super.connect(signer) as GladiusOrderQuoter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GladiusOrderQuoterInterface {
    return new utils.Interface(_abi) as GladiusOrderQuoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GladiusOrderQuoter {
    return new Contract(address, _abi, signerOrProvider) as GladiusOrderQuoter;
  }
}
