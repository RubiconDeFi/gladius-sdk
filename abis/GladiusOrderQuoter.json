{
  "abi": [
    {
      "inputs": [],
      "name": "OrdersLengthIncorrect",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        }
      ],
      "name": "getReactor",
      "outputs": [
        {
          "internalType": "contract IGladiusReactor",
          "name": "reactor",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e27806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063585da62814610046578063630dca1b1461005b5780637671d07b14610084575b600080fd5b61005961005436600461068d565b6100c5565b005b61006e61006936600461081a565b610146565b60405161007b919061095f565b60405180910390f35b6100a0610092366004610a89565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b8151600114610100576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061011557610115610ac6565b602002602001015160405160200161012d919061095f565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040848101518501810151815180830183528681526020808201879052835190810184526000815292517fe767b79400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169263e767b7949261023092918791600401610af5565b600060405180830381600087803b15801561024a57600080fd5b505af192505050801561025b575060015b61029c573d808015610289576040519150601f19603f3d011682016040523d82523d6000602084013e61028e565b606091505b50610298816102a3565b9150505b9392505050565b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561031f57815182602001fd5b818060200190518101906103339190610d1f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561038b5761038b610339565b60405290565b6040516060810167ffffffffffffffff8111828210171561038b5761038b610339565b60405160a0810167ffffffffffffffff8111828210171561038b5761038b610339565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561041e5761041e610339565b604052919050565b600067ffffffffffffffff82111561044057610440610339565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461046c57600080fd5b50565b600067ffffffffffffffff82111561048957610489610339565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126104c657600080fd5b81356104d96104d48261046f565b6103d7565b8181528460208386010111156104ee57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561051d57600080fd5b610525610368565b905081356105328161044a565b815260208201356105428161044a565b806020830152506040820135604082015260608201356060820152608082013561056b8161044a565b608082015260a082013567ffffffffffffffff81111561058a57600080fd5b610596848285016104b5565b60a08301525092915050565b6000606082840312156105b457600080fd5b6105bc610391565b905081356105c98161044a565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126105f857600080fd5b813560206106086104d483610426565b8281526060928302850182019282820191908785111561062757600080fd5b8387015b858110156106805781818a0312156106435760008081fd5b61064b610391565b81356106568161044a565b8152818601358682015260408083013561066f8161044a565b90820152845292840192810161062b565b5090979650505050505050565b600080604083850312156106a057600080fd5b823567ffffffffffffffff808211156106b857600080fd5b818501915085601f8301126106cc57600080fd5b813560206106dc6104d483610426565b82815260059290921b840181019181810190898411156106fb57600080fd5b8286015b848110156107ec578035868111156107175760008081fd5b870160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181131561074d5760008081fd5b6107556103b4565b86830135898111156107675760008081fd5b6107758f898387010161050b565b8252506107858e604085016105a2565b8782015260a08301358981111561079c5760008081fd5b6107aa8f89838701016105e7565b60408301525060c0830135898111156107c35760008081fd5b6107d18f89838701016104b5565b606083015250910135608082015283529183019183016106ff565b509650508601359250508082111561080357600080fd5b50610810858286016104b5565b9150509250929050565b60008060006060848603121561082f57600080fd5b833567ffffffffffffffff8082111561084757600080fd5b610853878388016104b5565b9450602086013591508082111561086957600080fd5b50610876868287016104b5565b925050604084013590509250925092565b60005b838110156108a257818101518382015260200161088a565b50506000910152565b600081518084526108c3816020860160208601610887565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610954578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101610909565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a08401526109db6101c08401826108ab565b90506020840151610a196040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a0860152610a5483836108f5565b925060608601519150808584030160c086015250610a7282826108ab565b915050608084015160e08401528091505092915050565b600060208284031215610a9b57600080fd5b813567ffffffffffffffff811115610ab257600080fd5b610abe848285016104b5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000845160406060840152610b1160a08401826108ab565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b4c82826108ab565b9150508460208401528281036040840152610b6781856108ab565b9695505050505050565b600082601f830112610b8257600080fd5b8151610b906104d48261046f565b818152846020838601011115610ba557600080fd5b610abe826020830160208701610887565b600060c08284031215610bc857600080fd5b610bd0610368565b90508151610bdd8161044a565b81526020820151610bed8161044a565b8060208301525060408201516040820152606082015160608201526080820151610c168161044a565b608082015260a082015167ffffffffffffffff811115610c3557600080fd5b61059684828501610b71565b600060608284031215610c5357600080fd5b610c5b610391565b90508151610c688161044a565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610c9757600080fd5b81516020610ca76104d483610426565b82815260609283028501820192828201919087851115610cc657600080fd5b8387015b858110156106805781818a031215610ce25760008081fd5b610cea610391565b8151610cf58161044a565b81528186015186820152604080830151610d0e8161044a565b908201528452928401928101610cca565b600060208284031215610d3157600080fd5b815167ffffffffffffffff80821115610d4957600080fd5b9083019060e08286031215610d5d57600080fd5b610d656103b4565b825182811115610d7457600080fd5b610d8087828601610bb6565b825250610d908660208501610c41565b6020820152608083015182811115610da757600080fd5b610db387828601610c86565b60408301525060a083015182811115610dcb57600080fd5b610dd787828601610b71565b60608301525060c09290920151608083015250939250505056fea264697066735822122075209481528e1df6a421b9d3bd2d0623326690fdab52b8d54756cb9bdc96ffce64736f6c63430008130033",
    "sourceMap": "428:2597:65:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063585da62814610046578063630dca1b1461005b5780637671d07b14610084575b600080fd5b61005961005436600461068d565b6100c5565b005b61006e61006936600461081a565b610146565b60405161007b919061095f565b60405180910390f35b6100a0610092366004610a89565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b8151600114610100576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061011557610115610ac6565b602002602001015160405160200161012d919061095f565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040848101518501810151815180830183528681526020808201879052835190810184526000815292517fe767b79400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169263e767b7949261023092918791600401610af5565b600060405180830381600087803b15801561024a57600080fd5b505af192505050801561025b575060015b61029c573d808015610289576040519150601f19603f3d011682016040523d82523d6000602084013e61028e565b606091505b50610298816102a3565b9150505b9392505050565b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561031f57815182602001fd5b818060200190518101906103339190610d1f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561038b5761038b610339565b60405290565b6040516060810167ffffffffffffffff8111828210171561038b5761038b610339565b60405160a0810167ffffffffffffffff8111828210171561038b5761038b610339565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561041e5761041e610339565b604052919050565b600067ffffffffffffffff82111561044057610440610339565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461046c57600080fd5b50565b600067ffffffffffffffff82111561048957610489610339565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126104c657600080fd5b81356104d96104d48261046f565b6103d7565b8181528460208386010111156104ee57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561051d57600080fd5b610525610368565b905081356105328161044a565b815260208201356105428161044a565b806020830152506040820135604082015260608201356060820152608082013561056b8161044a565b608082015260a082013567ffffffffffffffff81111561058a57600080fd5b610596848285016104b5565b60a08301525092915050565b6000606082840312156105b457600080fd5b6105bc610391565b905081356105c98161044a565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126105f857600080fd5b813560206106086104d483610426565b8281526060928302850182019282820191908785111561062757600080fd5b8387015b858110156106805781818a0312156106435760008081fd5b61064b610391565b81356106568161044a565b8152818601358682015260408083013561066f8161044a565b90820152845292840192810161062b565b5090979650505050505050565b600080604083850312156106a057600080fd5b823567ffffffffffffffff808211156106b857600080fd5b818501915085601f8301126106cc57600080fd5b813560206106dc6104d483610426565b82815260059290921b840181019181810190898411156106fb57600080fd5b8286015b848110156107ec578035868111156107175760008081fd5b870160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181131561074d5760008081fd5b6107556103b4565b86830135898111156107675760008081fd5b6107758f898387010161050b565b8252506107858e604085016105a2565b8782015260a08301358981111561079c5760008081fd5b6107aa8f89838701016105e7565b60408301525060c0830135898111156107c35760008081fd5b6107d18f89838701016104b5565b606083015250910135608082015283529183019183016106ff565b509650508601359250508082111561080357600080fd5b50610810858286016104b5565b9150509250929050565b60008060006060848603121561082f57600080fd5b833567ffffffffffffffff8082111561084757600080fd5b610853878388016104b5565b9450602086013591508082111561086957600080fd5b50610876868287016104b5565b925050604084013590509250925092565b60005b838110156108a257818101518382015260200161088a565b50506000910152565b600081518084526108c3816020860160208601610887565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610954578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101610909565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a08401526109db6101c08401826108ab565b90506020840151610a196040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a0860152610a5483836108f5565b925060608601519150808584030160c086015250610a7282826108ab565b915050608084015160e08401528091505092915050565b600060208284031215610a9b57600080fd5b813567ffffffffffffffff811115610ab257600080fd5b610abe848285016104b5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000845160406060840152610b1160a08401826108ab565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b4c82826108ab565b9150508460208401528281036040840152610b6781856108ab565b9695505050505050565b600082601f830112610b8257600080fd5b8151610b906104d48261046f565b818152846020838601011115610ba557600080fd5b610abe826020830160208701610887565b600060c08284031215610bc857600080fd5b610bd0610368565b90508151610bdd8161044a565b81526020820151610bed8161044a565b8060208301525060408201516040820152606082015160608201526080820151610c168161044a565b608082015260a082015167ffffffffffffffff811115610c3557600080fd5b61059684828501610b71565b600060608284031215610c5357600080fd5b610c5b610391565b90508151610c688161044a565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610c9757600080fd5b81516020610ca76104d483610426565b82815260609283028501820192828201919087851115610cc657600080fd5b8387015b858110156106805781818a031215610ce25760008081fd5b610cea610391565b8151610cf58161044a565b81528186015186820152604080830151610d0e8161044a565b908201528452928401928101610cca565b600060208284031215610d3157600080fd5b815167ffffffffffffffff80821115610d4957600080fd5b9083019060e08286031215610d5d57600080fd5b610d656103b4565b825182811115610d7457600080fd5b610d8087828601610bb6565b825250610d908660208501610c41565b6020820152608083015182811115610da757600080fd5b610db387828601610c86565b60408301525060a083015182811115610dcb57600080fd5b610dd787828601610b71565b60608301525060c09290920151608083015250939250505056fea264697066735822122075209481528e1df6a421b9d3bd2d0623326690fdab52b8d54756cb9bdc96ffce64736f6c63430008130033",
    "sourceMap": "428:2597:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:355;;;;;;:::i;:::-;;:::i;:::-;;1060:424;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1682:327;;;;;;:::i;:::-;1856:17;1845:29;;;1949;1921:58;;;;1898:95;;1682:327;;;;11901:42:130;11889:55;;;11871:74;;11859:2;11844:18;1682:327:65;11700:251:130;2668:355:65;2796:14;:21;2821:1;2796:26;2792:87;;2845:23;;;;;;;;;;;;;;2792:87;2888:18;2920:14;2935:1;2920:17;;;;;;;;:::i;:::-;;;;;;;2909:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2888:50;;3000:5;2994:12;2986:5;2982:2;2978:14;2971:36;1060:424;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:17:65;1845:29;;;1949;1921:58;;;;1898:95;1289:23;;;;;;;;;;;;;;;;;1356:9;;;;;;;-1:-1:-1;1356:9:65;;1234:145;;;;;:37;;;;;;;:145;;1289:23;1330:8;;1234:145;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:25;1460:6;1442:17;:25::i;:::-;1433:34;;1391:87;1218:260;1060:424;;;;;:::o;2186:329::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2312:13:65;;-1:-1:-1;;;2308:201:65;;;2404:6;2398:13;2389:6;2385:2;2381:15;2374:38;2308:201;2474:6;2463:35;;;;;;;;;;;;:::i;:::-;2456:42;2186:329;-1:-1:-1;;2186:329:65:o;14:184:130:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:::-;533:2;527:9;575:4;563:17;;610:18;595:34;;631:22;;;592:62;589:88;;;657:18;;:::i;719:253::-;791:2;785:9;833:4;821:17;;868:18;853:34;;889:22;;;850:62;847:88;;;915:18;;:::i;977:334::-;1048:2;1042:9;1104:2;1094:13;;1109:66;1090:86;1078:99;;1207:18;1192:34;;1228:22;;;1189:62;1186:88;;;1254:18;;:::i;:::-;1290:2;1283:22;977:334;;-1:-1:-1;977:334:130:o;1316:196::-;1389:4;1422:18;1414:6;1411:30;1408:56;;;1444:18;;:::i;:::-;-1:-1:-1;1489:1:130;1485:14;1501:4;1481:25;;1316:196::o;1517:164::-;1613:42;1606:5;1602:54;1595:5;1592:65;1582:93;;1671:1;1668;1661:12;1582:93;1517:164;:::o;1686:245::-;1734:4;1767:18;1759:6;1756:30;1753:56;;;1789:18;;:::i;:::-;-1:-1:-1;1846:2:130;1834:15;1851:66;1830:88;1920:4;1826:99;;1686:245::o;1936:462::-;1978:5;2031:3;2024:4;2016:6;2012:17;2008:27;1998:55;;2049:1;2046;2039:12;1998:55;2085:6;2072:20;2116:48;2132:31;2160:2;2132:31;:::i;:::-;2116:48;:::i;:::-;2189:2;2180:7;2173:19;2235:3;2228:4;2223:2;2215:6;2211:15;2207:26;2204:35;2201:55;;;2252:1;2249;2242:12;2201:55;2317:2;2310:4;2302:6;2298:17;2291:4;2282:7;2278:18;2265:55;2365:1;2340:16;;;2358:4;2336:27;2329:38;;;;2344:7;1936:462;-1:-1:-1;;;1936:462:130:o;2403:924::-;2459:5;2507:4;2495:9;2490:3;2486:19;2482:30;2479:50;;;2525:1;2522;2515:12;2479:50;2547:22;;:::i;:::-;2538:31;;2606:9;2593:23;2625:43;2660:7;2625:43;:::i;:::-;2677:22;;2751:2;2736:18;;2723:32;2764:43;2723:32;2764:43;:::i;:::-;2839:7;2834:2;2827:5;2823:14;2816:31;;2907:2;2896:9;2892:18;2879:32;2874:2;2867:5;2863:14;2856:56;2972:2;2961:9;2957:18;2944:32;2939:2;2932:5;2928:14;2921:56;3029:3;3018:9;3014:19;3001:33;3043:43;3078:7;3043:43;:::i;:::-;3113:3;3102:15;;3095:32;3178:3;3163:19;;3150:33;3206:18;3195:30;;3192:50;;;3238:1;3235;3228:12;3192:50;3275:45;3316:3;3307:6;3296:9;3292:22;3275:45;:::i;:::-;3269:3;3262:5;3258:15;3251:70;;2403:924;;;;:::o;3332:433::-;3389:5;3437:4;3425:9;3420:3;3416:19;3412:30;3409:50;;;3455:1;3452;3445:12;3409:50;3477:22;;:::i;:::-;3468:31;;3536:9;3523:23;3555:43;3590:7;3555:43;:::i;:::-;3621:7;3614:5;3607:22;;3689:2;3678:9;3674:18;3661:32;3656:2;3649:5;3645:14;3638:56;3754:2;3743:9;3739:18;3726:32;3721:2;3714:5;3710:14;3703:56;3332:433;;;;:::o;3770:1249::-;3835:5;3888:3;3881:4;3873:6;3869:17;3865:27;3855:55;;3906:1;3903;3896:12;3855:55;3942:6;3929:20;3968:4;3992:73;4008:56;4061:2;4008:56;:::i;3992:73::-;4099:15;;;4161:4;4204:11;;;4192:24;;4188:33;;;4130:12;;;;4087:3;4233:15;;;4230:35;;;4261:1;4258;4251:12;4230:35;4297:2;4289:6;4285:15;4309:681;4325:6;4320:3;4317:15;4309:681;;;4401:2;4395:3;4390;4386:13;4382:22;4379:112;;;4445:1;4474:2;4470;4463:14;4379:112;4517:22;;:::i;:::-;4580:3;4567:17;4597:43;4632:7;4597:43;:::i;:::-;4653:22;;4724:12;;;4711:26;4695:14;;;4688:50;4761:2;4804:12;;;4791:26;4830:43;4791:26;4830:43;:::i;:::-;4893:14;;;4886:31;4930:18;;4968:12;;;;4342;;4309:681;;;-1:-1:-1;5008:5:130;;3770:1249;-1:-1:-1;;;;;;;3770:1249:130:o;5024:2610::-;5158:6;5166;5219:2;5207:9;5198:7;5194:23;5190:32;5187:52;;;5235:1;5232;5225:12;5187:52;5275:9;5262:23;5304:18;5345:2;5337:6;5334:14;5331:34;;;5361:1;5358;5351:12;5331:34;5399:6;5388:9;5384:22;5374:32;;5444:7;5437:4;5433:2;5429:13;5425:27;5415:55;;5466:1;5463;5456:12;5415:55;5502:2;5489:16;5524:4;5548:73;5564:56;5617:2;5564:56;:::i;5548:73::-;5655:15;;;5737:1;5733:10;;;;5725:19;;5721:28;;;5686:12;;;;5761:19;;;5758:39;;;5793:1;5790;5783:12;5758:39;5825:2;5821;5817:11;5837:1595;5853:6;5848:3;5845:15;5837:1595;;;5939:3;5926:17;5975:2;5962:11;5959:19;5956:109;;;6019:1;6048:2;6044;6037:14;5956:109;6088:20;;6131:4;6159:16;;;6177:66;6155:89;6151:98;-1:-1:-1;6148:188:130;;;6290:1;6319:2;6315;6308:14;6148:188;6362:22;;:::i;:::-;6434:2;6430;6426:11;6413:25;6467:2;6457:8;6454:16;6451:106;;;6511:1;6540:2;6536;6529:14;6451:106;6584:64;6640:7;6635:2;6624:8;6620:2;6616:17;6612:26;6584:64;:::i;:::-;6577:5;6570:79;;6685:50;6727:7;6722:2;6718;6714:11;6685:50;:::i;:::-;6680:2;6673:5;6669:14;6662:74;6786:4;6782:2;6778:13;6765:27;6821:2;6811:8;6808:16;6805:109;;;6866:1;6896:3;6891;6884:16;6805:109;6950:76;7018:7;7013:2;7002:8;6998:2;6994:17;6990:26;6950:76;:::i;:::-;6945:2;6938:5;6934:14;6927:100;;7077:3;7073:2;7069:12;7056:26;7111:2;7101:8;7098:16;7095:109;;;7156:1;7186:3;7181;7174:16;7095:109;7242:53;7287:7;7282:2;7271:8;7267:2;7263:17;7259:26;7242:53;:::i;:::-;7235:4;7224:16;;7217:79;-1:-1:-1;7346:11:130;;7333:25;7327:3;7316:15;;7309:50;7372:18;;7410:12;;;;5870;;5837:1595;;;-1:-1:-1;7451:5:130;-1:-1:-1;;7494:18:130;;7481:32;;-1:-1:-1;;7525:16:130;;;7522:36;;;7554:1;7551;7544:12;7522:36;;7577:51;7620:7;7609:8;7598:9;7594:24;7577:51;:::i;:::-;7567:61;;;5024:2610;;;;;:::o;7639:607::-;7734:6;7742;7750;7803:2;7791:9;7782:7;7778:23;7774:32;7771:52;;;7819:1;7816;7809:12;7771:52;7859:9;7846:23;7888:18;7929:2;7921:6;7918:14;7915:34;;;7945:1;7942;7935:12;7915:34;7968:49;8009:7;8000:6;7989:9;7985:22;7968:49;:::i;:::-;7958:59;;8070:2;8059:9;8055:18;8042:32;8026:48;;8099:2;8089:8;8086:16;8083:36;;;8115:1;8112;8105:12;8083:36;;8138:51;8181:7;8170:8;8159:9;8155:24;8138:51;:::i;:::-;8128:61;;;8236:2;8225:9;8221:18;8208:32;8198:42;;7639:607;;;;;:::o;8251:250::-;8336:1;8346:113;8360:6;8357:1;8354:13;8346:113;;;8436:11;;;8430:18;8417:11;;;8410:39;8382:2;8375:10;8346:113;;;-1:-1:-1;;8493:1:130;8475:16;;8468:27;8251:250::o;8506:329::-;8547:3;8585:5;8579:12;8612:6;8607:3;8600:19;8628:76;8697:6;8690:4;8685:3;8681:14;8674:4;8667:5;8663:16;8628:76;:::i;:::-;8749:2;8737:15;8754:66;8733:88;8724:98;;;;8824:4;8720:109;;8506:329;-1:-1:-1;;8506:329:130:o;9101:696::-;9165:3;9203:5;9197:12;9230:6;9225:3;9218:19;9256:4;9285:2;9280:3;9276:12;9269:19;;9322:2;9315:5;9311:14;9343:1;9353:419;9367:6;9364:1;9361:13;9353:419;;;9426:13;;9533:9;;9462:42;9529:18;;;9517:31;;9588:11;;;9582:18;9568:12;;;9561:40;9624:4;9672:11;;;9666:18;9662:27;9648:12;;;9641:49;9719:4;9710:14;;;;9747:15;;;;9389:1;9382:9;9353:419;;;-1:-1:-1;9788:3:130;;9101:696;-1:-1:-1;;;;;9101:696:130:o;9802:1568::-;9995:2;9984:9;9977:21;9958:4;10033:6;10027:13;10076:4;10071:2;10060:9;10056:18;10049:32;10100:42;10204:2;10189:12;10183:19;10179:28;10173:3;10162:9;10158:19;10151:57;10279:2;10273;10259:12;10255:21;10249:28;10245:37;10239:3;10228:9;10224:19;10217:66;10344:4;10330:12;10326:23;10320:30;10314:3;10303:9;10299:19;10292:59;10412:4;10398:12;10394:23;10388:30;10382:3;10371:9;10367:19;10360:59;10492:2;10484:4;10470:12;10466:23;10460:30;10456:39;10450:3;10439:9;10435:19;10428:68;;10551:4;10537:12;10533:23;10527:30;10505:52;;10594:4;10588:3;10577:9;10573:19;10566:33;10619:53;10667:3;10656:9;10652:19;10636:14;10619:53;:::i;:::-;10608:64;;10721:2;10713:6;10709:15;10703:22;10734:66;10794:4;10783:9;10779:20;10763:14;8920:12;;8934:42;8916:61;8904:74;;9027:4;9016:16;;;9010:23;8994:14;;;8987:47;9083:4;9072:16;;;9066:23;9050:14;;9043:47;8840:256;10734:66;;10849:4;10841:6;10837:17;10831:24;10874:66;11003:2;10991:9;10986:3;10982:19;10978:28;10971:4;10960:9;10956:20;10949:58;11030:60;11086:3;11070:14;11030:60;:::i;:::-;11016:74;;11139:4;11131:6;11127:17;11121:24;11099:46;;11211:2;11199:9;11191:6;11187:22;11183:31;11176:4;11165:9;11161:20;11154:61;;11238:40;11271:6;11255:14;11238:40;:::i;:::-;11224:54;;;11334:4;11326:6;11322:17;11316:24;11309:4;11298:9;11294:20;11287:54;11358:6;11350:14;;;9802:1568;;;;:::o;11375:320::-;11443:6;11496:2;11484:9;11475:7;11471:23;11467:32;11464:52;;;11512:1;11509;11502:12;11464:52;11552:9;11539:23;11585:18;11577:6;11574:30;11571:50;;;11617:1;11614;11607:12;11571:50;11640:49;11681:7;11672:6;11661:9;11657:22;11640:49;:::i;:::-;11630:59;11375:320;-1:-1:-1;;;;11375:320:130:o;11956:184::-;12008:77;12005:1;11998:88;12105:4;12102:1;12095:15;12129:4;12126:1;12119:15;12145:826;12408:2;12397:9;12390:21;12371:4;12446:6;12440:13;12489:4;12484:2;12473:9;12469:18;12462:32;12517:51;12563:3;12552:9;12548:19;12534:12;12517:51;:::i;:::-;12503:65;;12617:4;12609:6;12605:17;12599:24;12688:66;12676:9;12668:6;12664:22;12660:95;12654:3;12643:9;12639:19;12632:124;12776:40;12809:6;12793:14;12776:40;:::i;:::-;12765:51;;;12854:6;12847:4;12836:9;12832:20;12825:36;12908:9;12903:3;12899:19;12892:4;12881:9;12877:20;12870:49;12936:29;12961:3;12953:6;12936:29;:::i;:::-;12928:37;12145:826;-1:-1:-1;;;;;;12145:826:130:o;12976:441::-;13029:5;13082:3;13075:4;13067:6;13063:17;13059:27;13049:55;;13100:1;13097;13090:12;13049:55;13129:6;13123:13;13160:48;13176:31;13204:2;13176:31;:::i;13160:48::-;13233:2;13224:7;13217:19;13279:3;13272:4;13267:2;13259:6;13255:15;13251:26;13248:35;13245:55;;;13296:1;13293;13286:12;13245:55;13309:77;13383:2;13376:4;13367:7;13363:18;13356:4;13348:6;13344:17;13309:77;:::i;13422:904::-;13489:5;13537:4;13525:9;13520:3;13516:19;13512:30;13509:50;;;13555:1;13552;13545:12;13509:50;13577:22;;:::i;:::-;13568:31;;13629:9;13623:16;13648:43;13683:7;13648:43;:::i;:::-;13700:22;;13767:2;13752:18;;13746:25;13780:43;13746:25;13780:43;:::i;:::-;13855:7;13850:2;13843:5;13839:14;13832:31;;13916:2;13905:9;13901:18;13895:25;13890:2;13883:5;13879:14;13872:49;13974:2;13963:9;13959:18;13953:25;13948:2;13941:5;13937:14;13930:49;14024:3;14013:9;14009:19;14003:26;14038:43;14073:7;14038:43;:::i;:::-;14108:3;14097:15;;14090:32;14166:3;14151:19;;14145:26;14194:18;14183:30;;14180:50;;;14226:1;14223;14216:12;14180:50;14263:56;14315:3;14306:6;14295:9;14291:22;14263:56;:::i;14331:423::-;14399:5;14447:4;14435:9;14430:3;14426:19;14422:30;14419:50;;;14465:1;14462;14455:12;14419:50;14487:22;;:::i;:::-;14478:31;;14539:9;14533:16;14558:43;14593:7;14558:43;:::i;:::-;14624:7;14617:5;14610:22;;14685:2;14674:9;14670:18;14664:25;14659:2;14652:5;14648:14;14641:49;14743:2;14732:9;14728:18;14722:25;14717:2;14710:5;14706:14;14699:49;14331:423;;;;:::o;14759:1232::-;14835:5;14888:3;14881:4;14873:6;14869:17;14865:27;14855:55;;14906:1;14903;14896:12;14855:55;14935:6;14929:13;14961:4;14985:73;15001:56;15054:2;15001:56;:::i;14985:73::-;15092:15;;;15154:4;15197:11;;;15185:24;;15181:33;;;15123:12;;;;15080:3;15226:15;;;15223:35;;;15254:1;15251;15244:12;15223:35;15290:2;15282:6;15278:15;15302:660;15318:6;15313:3;15310:15;15302:660;;;15394:2;15388:3;15383;15379:13;15375:22;15372:112;;;15438:1;15467:2;15463;15456:14;15372:112;15510:22;;:::i;:::-;15566:3;15560:10;15583:43;15618:7;15583:43;:::i;:::-;15639:22;;15703:12;;;15697:19;15681:14;;;15674:43;15740:2;15776:12;;;15770:19;15802:43;15770:19;15802:43;:::i;:::-;15865:14;;;15858:31;15902:18;;15940:12;;;;15335;;15302:660;;15996:1163;16098:6;16151:2;16139:9;16130:7;16126:23;16122:32;16119:52;;;16167:1;16164;16157:12;16119:52;16200:9;16194:16;16229:18;16270:2;16262:6;16259:14;16256:34;;;16286:1;16283;16276:12;16256:34;16309:22;;;;16365:4;16347:16;;;16343:27;16340:47;;;16383:1;16380;16373:12;16340:47;16409:22;;:::i;:::-;16462:2;16456:9;16490:2;16480:8;16477:16;16474:36;;;16506:1;16503;16496:12;16474:36;16533:66;16591:7;16580:8;16576:2;16572:17;16533:66;:::i;:::-;16526:5;16519:81;;16632:61;16685:7;16680:2;16676;16672:11;16632:61;:::i;:::-;16627:2;16620:5;16616:14;16609:85;16733:3;16729:2;16725:12;16719:19;16763:2;16753:8;16750:16;16747:36;;;16779:1;16776;16769:12;16747:36;16817:78;16887:7;16876:8;16872:2;16868:17;16817:78;:::i;:::-;16810:4;16803:5;16799:16;16792:104;;16935:4;16931:2;16927:13;16921:20;16966:2;16956:8;16953:16;16950:36;;;16982:1;16979;16972:12;16950:36;17020:55;17067:7;17056:8;17052:2;17048:17;17020:55;:::i;:::-;17013:4;17002:16;;16995:81;-1:-1:-1;17123:3:130;17115:12;;;;17109:19;17103:3;17092:15;;17085:44;-1:-1:-1;17006:5:130;15996:1163;-1:-1:-1;;;15996:1163:130:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getReactor(bytes)": "7671d07b",
    "quote(bytes,bytes,uint256)": "630dca1b",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": "585da628"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OrdersLengthIncorrect\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"}],\"name\":\"getReactor\",\"outputs\":[{\"internalType\":\"contract IGladiusReactor\",\"name\":\"reactor\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"getReactor(bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\"},\"returns\":{\"reactor\":\"reactor\"}},\"quote(bytes,bytes,uint256)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)\":{\"details\":\"reverts with the resolved order as reason\",\"params\":{\"resolvedOrders\":\"The resolved orders\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"OrdersLengthIncorrect()\":[{\"notice\":\"thrown if reactorCallback receives more than one order\"}]},\"kind\":\"user\",\"methods\":{\"getReactor(bytes)\":{\"notice\":\"Return the reactor of a given order (abi.encoded bytes).\"},\"quote(bytes,bytes,uint256)\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)\":{\"notice\":\"Reactor callback function\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/GladiusOrderQuoter.sol\":\"GladiusOrderQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0xc5f008acd831f9383ce63163c1ac5cbc6ac399900e1ebf725f97ba6e929a256f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e93f4a3c64c10771750c24a6af0c8492a6a8402c50fe366001d6ecf14eccd4d5\",\"dweb:/ipfs/QmbhDicBdos6hsjkcvsrptyJcm1XKS2XWL2z6vApktCry7\"]},\"src/interfaces/IGladiusReactor.sol\":{\"keccak256\":\"0x402883768537e02d347fa15fe85182d6637be21d98278bd16f3cead534c2eaf3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0bf975385903f32eb5a65daba928c018ab46ab9891a3178c9870771d83c0461\",\"dweb:/ipfs/QmdpcuY4Bp1suPMDC81ifGbgNGeoCHqF15nn1GErDiNYqL\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0\",\"dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344\",\"dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lens/GladiusOrderQuoter.sol\":{\"keccak256\":\"0xd5fa0738f2969d3a8a316a8da81f0d6b587644e6d4af3f9ffb2dddea794ec62e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ff519ddb83be2a209c53b6621f660ef55491e74331bde3d6cfa5dbe96a935891\",\"dweb:/ipfs/QmViSf3otxhWePAAYzfe3YTkA19Azr6qiV8P327PLdpcjm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OrdersLengthIncorrect"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getReactor",
          "outputs": [
            {
              "internalType": "contract IGladiusReactor",
              "name": "reactor",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getReactor(bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "returns": {
              "reactor": "reactor"
            }
          },
          "quote(bytes,bytes,uint256)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": {
            "details": "reverts with the resolved order as reason",
            "params": {
              "resolvedOrders": "The resolved orders"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getReactor(bytes)": {
            "notice": "Return the reactor of a given order (abi.encoded bytes)."
          },
          "quote(bytes,bytes,uint256)": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": {
            "notice": "Reactor callback function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/",
        "solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/GladiusOrderQuoter.sol": "GladiusOrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0xc5f008acd831f9383ce63163c1ac5cbc6ac399900e1ebf725f97ba6e929a256f",
        "urls": [
          "bzz-raw://e93f4a3c64c10771750c24a6af0c8492a6a8402c50fe366001d6ecf14eccd4d5",
          "dweb:/ipfs/QmbhDicBdos6hsjkcvsrptyJcm1XKS2XWL2z6vApktCry7"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IGladiusReactor.sol": {
        "keccak256": "0x402883768537e02d347fa15fe85182d6637be21d98278bd16f3cead534c2eaf3",
        "urls": [
          "bzz-raw://a0bf975385903f32eb5a65daba928c018ab46ab9891a3178c9870771d83c0461",
          "dweb:/ipfs/QmdpcuY4Bp1suPMDC81ifGbgNGeoCHqF15nn1GErDiNYqL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101",
        "urls": [
          "bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0",
          "dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1",
        "urls": [
          "bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344",
          "dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/GladiusOrderQuoter.sol": {
        "keccak256": "0xd5fa0738f2969d3a8a316a8da81f0d6b587644e6d4af3f9ffb2dddea794ec62e",
        "urls": [
          "bzz-raw://ff519ddb83be2a209c53b6621f660ef55491e74331bde3d6cfa5dbe96a935891",
          "dweb:/ipfs/QmViSf3otxhWePAAYzfe3YTkA19Azr6qiV8P327PLdpcjm"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/GladiusOrderQuoter.sol",
    "id": 37736,
    "exportedSymbols": {
      "GladiusOrderQuoter": [
        37735
      ],
      "IGladiusReactor": [
        37514
      ],
      "IReactorCallback": [
        37591
      ],
      "OrderInfo": [
        37351
      ],
      "ResolvedOrder": [
        37381
      ],
      "SignedOrder": [
        37386
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2981:65",
    "nodes": [
      {
        "id": 37609,
        "nodeType": "PragmaDirective",
        "src": "45:23:65",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 37613,
        "nodeType": "ImportDirective",
        "src": "70:81:65",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37736,
        "sourceUnit": 37387,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37610,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37351,
              "src": "78:9:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37611,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37381,
              "src": "89:13:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37612,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37386,
              "src": "104:11:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37615,
        "nodeType": "ImportDirective",
        "src": "152:68:65",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37736,
        "sourceUnit": 37592,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37614,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37591,
              "src": "160:16:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37617,
        "nodeType": "ImportDirective",
        "src": "221:66:65",
        "nodes": [],
        "absolutePath": "src/interfaces/IGladiusReactor.sol",
        "file": "../interfaces/IGladiusReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37736,
        "sourceUnit": 37515,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37616,
              "name": "IGladiusReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37514,
              "src": "229:15:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37735,
        "nodeType": "ContractDefinition",
        "src": "428:2597:65",
        "nodes": [
          {
            "id": 37623,
            "nodeType": "ErrorDefinition",
            "src": "553:30:65",
            "nodes": [],
            "documentation": {
              "id": 37621,
              "nodeType": "StructuredDocumentation",
              "src": "482:66:65",
              "text": "@notice thrown if reactorCallback receives more than one order"
            },
            "errorSelector": "06ee9878",
            "name": "OrdersLengthIncorrect",
            "nameLocation": "559:21:65",
            "parameters": {
              "id": 37622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:2:65"
            }
          },
          {
            "id": 37626,
            "nodeType": "VariableDeclaration",
            "src": "589:39:65",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ORDER_INFO_OFFSET",
            "nameLocation": "606:17:65",
            "scope": 37735,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37624,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "589:7:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 37625,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "626:2:65",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 37668,
            "nodeType": "FunctionDefinition",
            "src": "1060:424:65",
            "nodes": [],
            "body": {
              "id": 37667,
              "nodeType": "Block",
              "src": "1208:276:65",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 37653,
                        "nodeType": "Block",
                        "src": "1388:2:65",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 37654,
                      "nodeType": "TryCatchClause",
                      "src": "1388:2:65"
                    },
                    {
                      "block": {
                        "id": 37664,
                        "nodeType": "Block",
                        "src": "1419:59:65",
                        "statements": [
                          {
                            "expression": {
                              "id": 37662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 37658,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37637,
                                "src": "1433:6:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 37660,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37656,
                                    "src": "1460:6:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 37659,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37704,
                                  "src": "1442:17:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$37381_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 37661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1442:25:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1433:34:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 37663,
                            "nodeType": "ExpressionStatement",
                            "src": "1433:34:65"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 37665,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 37657,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 37656,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1411:6:65",
                            "nodeType": "VariableDeclaration",
                            "scope": 37665,
                            "src": "1398:19:65",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 37655,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1398:5:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1397:21:65"
                      },
                      "src": "1391:87:65"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37644,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37629,
                            "src": "1301:5:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 37645,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37631,
                            "src": "1308:3:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 37643,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37386,
                          "src": "1289:11:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$37386_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 37646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1289:23:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$37386_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "id": 37647,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37633,
                        "src": "1330:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 37650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1362:2:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 37649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1356:5:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 37648,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1356:5:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1356:9:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$37386_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 37640,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37629,
                            "src": "1245:5:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 37639,
                          "name": "getReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37679,
                          "src": "1234:10:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_contract$_IGladiusReactor_$37514_$",
                            "typeString": "function (bytes memory) pure returns (contract IGladiusReactor)"
                          }
                        },
                        "id": 37641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1234:17:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGladiusReactor_$37514",
                          "typeString": "contract IGladiusReactor"
                        }
                      },
                      "id": 37642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1252:19:65",
                      "memberName": "executeWithCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37489,
                      "src": "1234:37:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SignedOrder_$37386_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 37652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:145:65",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37666,
                  "nodeType": "TryStatement",
                  "src": "1218:260:65"
                }
              ]
            },
            "documentation": {
              "id": 37627,
              "nodeType": "StructuredDocumentation",
              "src": "635:420:65",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "630dca1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "1069:5:65",
            "parameters": {
              "id": 37634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37629,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1097:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37668,
                  "src": "1084:18:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37628,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37631,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1125:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37668,
                  "src": "1112:16:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37630,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37633,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1146:8:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37668,
                  "src": "1138:16:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:86:65"
            },
            "returnParameters": {
              "id": 37638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37637,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1200:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37668,
                  "src": "1179:27:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 37636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37635,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1179:13:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37381,
                      "src": "1179:13:65"
                    },
                    "referencedDeclaration": 37381,
                    "src": "1179:13:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:29:65"
            },
            "scope": 37735,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37679,
            "nodeType": "FunctionDefinition",
            "src": "1682:327:65",
            "nodes": [],
            "body": {
              "id": 37678,
              "nodeType": "Block",
              "src": "1782:227:65",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1801:202:65",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1815:59:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "order",
                              "nodeType": "YulIdentifier",
                              "src": "1849:5:65"
                            },
                            {
                              "name": "ORDER_INFO_OFFSET",
                              "nodeType": "YulIdentifier",
                              "src": "1856:17:65"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1845:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1845:29:65"
                        },
                        "variables": [
                          {
                            "name": "orderInfoOffsetPointer",
                            "nodeType": "YulTypedName",
                            "src": "1819:22:65",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1887:106:65",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "orderInfoOffsetPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1925:22:65"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "orderInfoOffsetPointer",
                                      "nodeType": "YulIdentifier",
                                      "src": "1955:22:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1949:5:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1949:29:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1921:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1921:58:65"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1898:5:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1898:95:65"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1887:7:65"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 37626,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1856:17:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 37671,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1849:5:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 37675,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1887:7:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 37677,
                  "nodeType": "InlineAssembly",
                  "src": "1792:211:65"
                }
              ]
            },
            "documentation": {
              "id": 37669,
              "nodeType": "StructuredDocumentation",
              "src": "1490:187:65",
              "text": "@notice Return the reactor of a given order (abi.encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @return reactor"
            },
            "functionSelector": "7671d07b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1691:10:65",
            "parameters": {
              "id": 37672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37671,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1724:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37679,
                  "src": "1711:18:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37670,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:34:65"
            },
            "returnParameters": {
              "id": 37676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37675,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1773:7:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37679,
                  "src": "1757:23:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGladiusReactor_$37514",
                    "typeString": "contract IGladiusReactor"
                  },
                  "typeName": {
                    "id": 37674,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37673,
                      "name": "IGladiusReactor",
                      "nameLocations": [
                        "1757:15:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37514,
                      "src": "1757:15:65"
                    },
                    "referencedDeclaration": 37514,
                    "src": "1757:15:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGladiusReactor_$37514",
                      "typeString": "contract IGladiusReactor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:25:65"
            },
            "scope": 37735,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37704,
            "nodeType": "FunctionDefinition",
            "src": "2186:329:65",
            "nodes": [],
            "body": {
              "id": 37703,
              "nodeType": "Block",
              "src": "2298:217:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37688,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37682,
                        "src": "2312:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 37689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2319:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2312:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 37690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2328:3:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "2312:19:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 37701,
                    "nodeType": "Block",
                    "src": "2442:67:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37696,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37682,
                              "src": "2474:6:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 37697,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37381,
                                  "src": "2483:13:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$37381_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 37698,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2482:15:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$37381_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$37381_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 37694,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2463:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 37695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2467:6:65",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2463:10:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2463:35:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 37687,
                        "id": 37700,
                        "nodeType": "Return",
                        "src": "2456:42:65"
                      }
                    ]
                  },
                  "id": 37702,
                  "nodeType": "IfStatement",
                  "src": "2308:201:65",
                  "trueBody": {
                    "id": 37693,
                    "nodeType": "Block",
                    "src": "2333:103:65",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2356:70:65",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2385:2:65",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2389:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2381:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2381:15:65"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2404:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2398:5:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2398:13:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2374:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2374:38:65"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2374:38:65"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 37682,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2389:6:65",
                            "valueSize": 1
                          },
                          {
                            "declaration": 37682,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2404:6:65",
                            "valueSize": 1
                          }
                        ],
                        "id": 37692,
                        "nodeType": "InlineAssembly",
                        "src": "2347:79:65"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 37680,
              "nodeType": "StructuredDocumentation",
              "src": "2015:166:65",
              "text": "@notice Return the order info of a given order (abi-encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "2195:17:65",
            "parameters": {
              "id": 37683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37682,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "2235:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37704,
                  "src": "2222:19:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:35:65"
            },
            "returnParameters": {
              "id": 37687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37686,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2291:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37704,
                  "src": "2270:26:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 37685,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37684,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "2270:13:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37381,
                      "src": "2270:13:65"
                    },
                    "referencedDeclaration": 37381,
                    "src": "2270:13:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2269:28:65"
            },
            "scope": 37735,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 37734,
            "nodeType": "FunctionDefinition",
            "src": "2668:355:65",
            "nodes": [],
            "body": {
              "id": 37733,
              "nodeType": "Block",
              "src": "2782:241:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37714,
                        "name": "resolvedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37709,
                        "src": "2796:14:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$37381_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ResolvedOrder memory[] memory"
                        }
                      },
                      "id": 37715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2811:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2796:21:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 37716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2821:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2796:26:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37722,
                  "nodeType": "IfStatement",
                  "src": "2792:87:65",
                  "trueBody": {
                    "id": 37721,
                    "nodeType": "Block",
                    "src": "2824:55:65",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37718,
                            "name": "OrdersLengthIncorrect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37623,
                            "src": "2845:21:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:23:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37720,
                        "nodeType": "RevertStatement",
                        "src": "2838:30:65"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37724,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2901:5:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 37733,
                      "src": "2888:18:65",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37723,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2888:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37731,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 37727,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37709,
                          "src": "2920:14:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$37381_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 37729,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 37728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2935:1:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2920:17:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 37725,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2909:3:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2913:6:65",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2909:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 37730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:29:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2888:50:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2957:60:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2982:2:65",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2986:5:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2978:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2978:14:65"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "3000:5:65"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2994:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2994:12:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2971:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2971:36:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2971:36:65"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 37724,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2986:5:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 37724,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3000:5:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 37732,
                  "nodeType": "InlineAssembly",
                  "src": "2948:69:65"
                }
              ]
            },
            "baseFunctions": [
              37590
            ],
            "documentation": {
              "id": 37705,
              "nodeType": "StructuredDocumentation",
              "src": "2521:142:65",
              "text": "@notice Reactor callback function\n @dev reverts with the resolved order as reason\n @param resolvedOrders The resolved orders"
            },
            "functionSelector": "585da628",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "2677:15:65",
            "parameters": {
              "id": 37712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37709,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2725:14:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37734,
                  "src": "2702:37:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$37381_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37707,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 37706,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2702:13:65"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 37381,
                        "src": "2702:13:65"
                      },
                      "referencedDeclaration": 37381,
                      "src": "2702:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 37708,
                    "nodeType": "ArrayTypeName",
                    "src": "2702:15:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$37381_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37734,
                  "src": "2749:12:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37710,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2692:75:65"
            },
            "returnParameters": {
              "id": 37713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:65"
            },
            "scope": 37735,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37619,
              "name": "IReactorCallback",
              "nameLocations": [
                "459:16:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37591,
              "src": "459:16:65"
            },
            "id": 37620,
            "nodeType": "InheritanceSpecifier",
            "src": "459:16:65"
          }
        ],
        "canonicalName": "GladiusOrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37618,
          "nodeType": "StructuredDocumentation",
          "src": "289:139:65",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37735,
          37591
        ],
        "name": "GladiusOrderQuoter",
        "nameLocation": "437:18:65",
        "scope": 37736,
        "usedErrors": [
          37623
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 65
}