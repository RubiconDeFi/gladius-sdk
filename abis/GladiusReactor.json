{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlineBeforeEndTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "duplicateToken",
          "type": "address"
        }
      ],
      "name": "DuplicateFeeOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "FeeTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputAndOutputDecay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEth",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeToken",
          "type": "address"
        }
      ],
      "name": "InvalidFeeToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOutLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReactor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidThreshold",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoExclusiveOverride",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderEndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PartialFillOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PartialFillUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuantityLtThreshold",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RelativeErrTooBig",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "Fill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "LogSetOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFeeController",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeController",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeControllerSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "quantities",
          "type": "uint256[]"
        }
      ],
      "name": "executeBatch",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "quantities",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "executeBatchWithCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "executeWithCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeController",
      "outputs": [
        {
          "internalType": "contract IProtocolFeeController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPermit2",
          "name": "_permit2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "contract IPermit2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFeeController",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50600160025561358c806100256000396000f3fe6080604052600436106100c05760003560e01c80636411e81611610074578063bccd8d091161004e578063bccd8d0914610221578063dc081cc914610234578063e767b7941461024757600080fd5b80636411e816146101b45780636999b377146101c75780638da5cb5b146101f457600080fd5b8063158ef93e116100a5578063158ef93e1461014a5780632d77138914610174578063485cc9551461019457600080fd5b806312261ee7146100cc57806313af40351461012857600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506003546100fe90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561013457600080fd5b506101486101433660046126be565b61025a565b005b34801561015657600080fd5b506003546101649060ff1681565b604051901515815260200161011f565b34801561018057600080fd5b5061014861018f3660046126be565b610306565b3480156101a057600080fd5b506101486101af3660046126e2565b6103cb565b6101486101c2366004612767565b6104a4565b3480156101d357600080fd5b506001546100fe9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561020057600080fd5b506000546100fe9073ffffffffffffffffffffffffffffffffffffffff1681565b61014861022f366004612815565b610620565b6101486102423660046128c7565b610804565b61014861025536600461290c565b61090b565b61026333610a80565b610299576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9491a250565b61030f33610a80565b610345576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527fb904ae9529e373e48bc82df4326cceaf1b4c472babf37f5b7dec46fecc6b53e0910160405180910390a15050565b60035460ff1615610408576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038054600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790557fffffffffffffffffffffff0000000000000000000000000000000000000000001661010093909216929092027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016176001179055565b6104ac610ab9565b8260008167ffffffffffffffff8111156104c8576104c8612970565b60405190808252806020026020018201604052801561058357816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104e65790505b50905060005b828110156105fb576105d68787838181106105a6576105a661299f565b90506020028101906105b891906129ce565b8686848181106105ca576105ca61299f565b90506020020135610b2f565b8282815181106105e8576105e861299f565b6020908102919091010152600101610589565b5061060581610cbd565b61060e81610d13565b505061061a6001600255565b50505050565b610628610ab9565b8460008167ffffffffffffffff81111561064457610644612970565b6040519080825280602002602001820160405280156106ff57816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816106625790505b50905060005b8281101561076b576107468989838181106107225761072261299f565b905060200281019061073491906129ce565b8888848181106105ca576105ca61299f565b8282815181106107585761075861299f565b6020908102919091010152600101610705565b5061077581610cbd565b6040517f585da628000000000000000000000000000000000000000000000000000000008152339063585da628906107b590849088908890600401612bdf565b600060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050506107f081610d13565b50506107fc6001600255565b505050505050565b61080c610ab9565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816108235790505090506108cc8383610b2f565b816000815181106108df576108df61299f565b60200260200101819052506108f381610cbd565b6108fc81610d13565b506109076001600255565b5050565b610913610ab9565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161092a5790505090506109d38585610b2f565b816000815181106109e6576109e661299f565b60200260200101819052506109fa81610cbd565b6040517f585da628000000000000000000000000000000000000000000000000000000008152339063585da62890610a3a90849087908790600401612bdf565b600060405180830381600087803b158015610a5457600080fd5b505af1158015610a68573d6000803e3d6000fd5b50505050610a7581610d13565b5061061a6001600255565b6000805473ffffffffffffffffffffffffffffffffffffffff90811690831603610aac57506001919050565b506000919050565b919050565b6002805403610b29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60028055565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810182905290610ba88480612ca5565b810190610bb5919061302f565b9050610bc081610e66565b6020810151604082015160a0830151600092610bdb92610fbf565b90506000610c00836020015184604001518560c001516110919092919063ffffffff16565b9050610c1d82828560e0015188611178909392919063ffffffff16565b6040805160a0810182528651815260208082018590529181018390529294509092506060820190610c5090890189612ca5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610c9385611265565b9052606084015160208501516080860151929650610cb49287929190611570565b50505092915050565b805160005b81811015610d0e576000838281518110610cde57610cde61299f565b60200260200101519050610cf181611611565b610cfb8133611a8b565b610d058133611bc3565b50600101610cc2565b505050565b805160005b81811015610e55576000838281518110610d3457610d3461299f565b602002602001015190506000816040015151905060005b81811015610db557600083604001518281518110610d6b57610d6b61299f565b60200260200101519050610dac81604001518260200151836000015173ffffffffffffffffffffffffffffffffffffffff16611f649092919063ffffffff16565b50600101610d4b565b5081600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16868581518110610dfe57610dfe61299f565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd66856000015160400151604051610e4391815260200190565b60405180910390a45050600101610d18565b504715610907576109073347611fab565b8060c0015151600114610ea5576040517fb85df39600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408101518151606001511015610ee8576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015181604001511015610f2a576040517f48fee69c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a0810151604081015160209091015114610fbc578060c00151600081518110610f5657610f5661299f565b6020026020010151604001518160c00151600081518110610f7957610f7961299f565b60200260200101516020015114610fbc576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b610ff96040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b83604001518460200151111561103b576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061105185602001518660400151868661204a565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff8111156110af576110af612970565b60405190808252806020026020018201604052801561111857816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816110cd5790505b50915060005b8181101561116f5761114a86828151811061113b5761113b61299f565b602002602001015186866120e4565b83828151811061115c5761115c61299f565b602090810291909101015260010161111e565b50509392505050565b6111b26040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b60606111c28386602001516121b4565b60006111fb856000815181106111da576111da61299f565b6020026020010151602001518760200151896121ee9092919063ffffffff16565b905061122c878288602001518860008151811061121a5761121a61299f565b60200260200101516020015188612232565b86866020018181525050808560008151811061124a5761124a61299f565b60209081029190910181015101525093959294509192505050565b6040517f476c61646975734f72646572280000000000000000000000000000000000000060208201527f4f72646572496e666f20696e666f2c0000000000000000000000000000000000602d8201527f75696e74323536206465636179537461727454696d652c000000000000000000603c8201527f75696e74323536206465636179456e6454696d652c000000000000000000000060538201527f61646472657373206578636c757369766546696c6c65722c000000000000000060688201527f75696e74323536206578636c757369766974794f766572726964654270732c0060808201527f6164647265737320696e707574546f6b656e2c00000000000000000000000000609f8201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b28201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cb8201527f44757463684f75747075745b5d206f7574707574732c0000000000000000000060e28201527f75696e743235362066696c6c5468726573686f6c64290000000000000000000060f882015260009061010e01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815260808301909152605280835290919061344a60208301396040518060c00160405280608d81526020016134ca608d913960405160200161147e9392919061310f565b604051602081830303815290604052805190602001206114a18360000151612367565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a00151604001516114dd8b60c00151612401565b60e0808d015160408051602081019d909d528c019a909a5260608b019890985260808a019690965273ffffffffffffffffffffffffffffffffffffffff94851660a08a015260c0890193909352921693860193909352610100850152610120840191909152610140830152610160820152610180015b604051602081830303815290604052805190602001209050919050565b61157a838361249f565b61061a57806115b5576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b81518110156107fc5760008282815181106115da576115da61299f565b60200260200101519050611603846127106115f59190613181565b6020830151906127106124ec565b6020909101526001016115bd565b60015473ffffffffffffffffffffffffffffffffffffffff166116315750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf0390611688908590600401613194565b600060405180830381865afa1580156116a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526116eb91908101906131a7565b60408301515181519192509060006117038284613181565b67ffffffffffffffff81111561171b5761171b612970565b60405190808252806020026020018201604052801561178457816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816117395790505b50905060005b838110156117d557856040015181815181106117a8576117a861299f565b60200260200101518282815181106117c2576117c261299f565b602090810291909101015260010161178a565b5060005b82811015611a7c5760008582815181106117f5576117f561299f565b6020026020010151905060005b828110156118b35786818151811061181c5761181c61299f565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16036118ab5781516040517ffff0830300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610b20565b600101611802565b506000805b86811015611938576000896040015182815181106118d8576118d861299f565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361192f57602081015161192c9084613181565b92505b506001016118b8565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036119755760208089015101516119729082613181565b90505b806000036119ca5781516040517feddf07f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610b20565b6119d88160056127106124ec565b82602001511115611a4b578151602083015160408085015190517f82e7565600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201526024810192909252919091166044820152606401610b20565b8184611a578589613181565b81518110611a6757611a6761299f565b602090810291909101015250506001016117d9565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff163014611adc576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160600151421115611b1b576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff1615610907578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b90611b979084908690600401613277565b60006040518083038186803b158015611baf57600080fd5b505afa1580156107fc573d6000803e3d6000fd5b600354610100900473ffffffffffffffffffffffffffffffffffffffff1663137c29fe611c6a846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff861682528087015181015190820152856000015160200151866080015160405180608001604052806052815260200161344a60529139604080517f476c61646975734f72646572280000000000000000000000000000000000000060208201527f4f72646572496e666f20696e666f2c0000000000000000000000000000000000602d8201527f75696e74323536206465636179537461727454696d652c000000000000000000603c8201527f75696e74323536206465636179456e6454696d652c000000000000000000000060538201527f61646472657373206578636c757369766546696c6c65722c000000000000000060688201527f75696e74323536206578636c757369766974794f766572726964654270732c0060808201527f6164647265737320696e707574546f6b656e2c00000000000000000000000000609f8201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b28201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cb8201527f44757463684f75747075745b5d206f7574707574732c0000000000000000000060e28201527f75696e743235362066696c6c5468726573686f6c64290000000000000000000060f8820152815160ee8183030181526101ce8201909252608d61010e8201818152916134ca9061012e01396040518060600160405280602e815260200161349c602e9139604051602001611ec994939291906132a6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b168352611f36969594939260040161332f565b600060405180830381600087803b158015611f5057600080fd5b505af11580156107fc573d6000803e3d6000fd5b73ffffffffffffffffffffffffffffffffffffffff8316611f8957610d0e8282611fab565b610d0e73ffffffffffffffffffffffffffffffffffffffff8416338484612528565b60008273ffffffffffffffffffffffffffffffffffffffff1682611af490604051600060405180830381858888f193505050503d806000811461200a576040519150601f19603f3d011682016040523d82523d6000602084013e61200f565b606091505b5050905080610d0e576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082821015612086576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4282116120945750826120dc565b4283106120a25750836120dc565b42839003838303868610156120c7576120be86880383836124ec565b870392506120d9565b6120d487870383836124ec565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015612143576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061215985602001518660400151868661204a565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b80821115610907576040517faabd5a0900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048411830215820261222357600080fd5b50910281810615159190040190565b8285118061223f57508184115b15612276576040517f0fa27c7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b841580612281575083155b156122b8576040517f3a672a9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808510156122f2576040517f4392460300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000836122ff84886133f7565b612309919061340e565b9050600061231787866133f7565b612323836103e86133f7565b108015915061235e576040517fd36ff1a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b60006040518060c00160405280608d81526020016134ca608d913980516020918201208351848301516040808701516060880151608089015160a08a0151805190890120935161155398939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff81111561242157612421612970565b6040519080825280601f01601f19166020018201604052801561244b576020820181803683370190505b50905060005b835181101561249057600061247e8583815181106124715761247161299f565b602002602001015161261a565b60208381028501015250600101612451565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff831615806124c357508142115b806124e3575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048411830215820261252157600080fd5b5091020490565b60006040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015273ffffffffffffffffffffffffffffffffffffffff841660248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080612613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610b20565b5050505050565b600060405180608001604052806052815260200161344a60529139805160209182012083518483015160408087015160608801519151611553969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b73ffffffffffffffffffffffffffffffffffffffff81168114610fbc57600080fd5b8035610ab481612691565b6000602082840312156126d057600080fd5b81356126db81612691565b9392505050565b600080604083850312156126f557600080fd5b823561270081612691565b9150602083013561271081612691565b809150509250929050565b60008083601f84011261272d57600080fd5b50813567ffffffffffffffff81111561274557600080fd5b6020830191508360208260051b850101111561276057600080fd5b9250929050565b6000806000806040858703121561277d57600080fd5b843567ffffffffffffffff8082111561279557600080fd5b6127a18883890161271b565b909650945060208701359150808211156127ba57600080fd5b506127c78782880161271b565b95989497509550505050565b60008083601f8401126127e557600080fd5b50813567ffffffffffffffff8111156127fd57600080fd5b60208301915083602082850101111561276057600080fd5b6000806000806000806060878903121561282e57600080fd5b863567ffffffffffffffff8082111561284657600080fd5b6128528a838b0161271b565b9098509650602089013591508082111561286b57600080fd5b6128778a838b0161271b565b9096509450604089013591508082111561289057600080fd5b5061289d89828a016127d3565b979a9699509497509295939492505050565b6000604082840312156128c157600080fd5b50919050565b600080604083850312156128da57600080fd5b823567ffffffffffffffff8111156128f157600080fd5b6128fd858286016128af565b95602094909401359450505050565b6000806000806060858703121561292257600080fd5b843567ffffffffffffffff8082111561293a57600080fd5b612946888389016128af565b955060208701359450604087013591508082111561296357600080fd5b506127c7878288016127d3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112612a0257600080fd5b9190910192915050565b60005b83811015612a27578181015183820152602001612a0f565b50506000910152565b60008151808452612a48816020860160208601612a0c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612ad9578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612a8e565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c0610180850152612b586101a0850182612a30565b90506020830151612b966020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408301518482036080860152612bae8282612a7a565b915050606083015184820360a0860152612bc88282612a30565b915050608083015160c08501528091505092915050565b6000604082016040835280865180835260608501915060608160051b8601019250602080890160005b83811015612c54577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552612c42868351612ae4565b95509382019390820190600101612c08565b5050858403818701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092019094019695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612cda57600080fd5b83018035915067ffffffffffffffff821115612cf557600080fd5b60200191503681900382131561276057600080fd5b6040516060810167ffffffffffffffff81118282101715612d2d57612d2d612970565b60405290565b6040516080810167ffffffffffffffff81118282101715612d2d57612d2d612970565b604051610100810167ffffffffffffffff81118282101715612d2d57612d2d612970565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612dc157612dc1612970565b604052919050565b600082601f830112612dda57600080fd5b813567ffffffffffffffff811115612df457612df4612970565b612e2560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612d7a565b818152846020838601011115612e3a57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c08284031215612e6957600080fd5b60405160c0810167ffffffffffffffff8282108183111715612e8d57612e8d612970565b8160405282935084359150612ea182612691565b908252602084013590612eb382612691565b816020840152604085013560408401526060850135606084015260808501359150612edd82612691565b81608084015260a0850135915080821115612ef757600080fd5b50612f0485828601612dc9565b60a0830152505092915050565b600060608284031215612f2357600080fd5b612f2b612d0a565b90508135612f3881612691565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612f7057612f70612970565b5060051b60200190565b600082601f830112612f8b57600080fd5b81356020612fa0612f9b83612f56565b612d7a565b82815260079290921b84018101918181019086841115612fbf57600080fd5b8286015b848110156130245760808189031215612fdc5760008081fd5b612fe4612d33565b8135612fef81612691565b815281850135858201526040808301359082015260608083013561301281612691565b90820152835291830191608001612fc3565b509695505050505050565b60006020828403121561304157600080fd5b813567ffffffffffffffff8082111561305957600080fd5b90830190610140828603121561306e57600080fd5b613076612d56565b82358281111561308557600080fd5b61309187828601612e57565b82525060208301356020820152604083013560408201526130b4606084016126b3565b6060820152608083013560808201526130d08660a08501612f11565b60a0820152610100830135828111156130e857600080fd5b6130f487828601612f7a565b60c083015250610120929092013560e0830152509392505050565b60008451613121818460208901612a0c565b845190830190613135818360208901612a0c565b8451910190613148818360208801612a0c565b0195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156124e6576124e6613152565b6020815260006124e36020830184612ae4565b600060208083850312156131ba57600080fd5b825167ffffffffffffffff8111156131d157600080fd5b8301601f810185136131e257600080fd5b80516131f0612f9b82612f56565b8181526060918202830184019184820191908884111561320f57600080fd5b938501935b8385101561326b5780858a03121561322c5760008081fd5b613234612d0a565b855161323f81612691565b8152858701518782015260408087015161325881612691565b9082015283529384019391850191613214565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006120dc6040830184612ae4565b7f476c61646975734f72646572207769746e6573732900000000000000000000008152600085516132de816015850160208a01612a0c565b8551908301906132f5816015840160208a01612a0c565b855191019061330b816015840160208901612a0c565b8451910190613321816015840160208801612a0c565b016015019695505050505050565b600061014061335f838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b60208901516040840152604089015160608401526133a06080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e0840152806101008401526133d581840186612a30565b90508281036101208401526133ea8185612a30565b9998505050505050505050565b80820281158282048414176124e6576124e6613152565b600082613444577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fe44757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c61646472657373206164646974696f6e616c56616c69646174696f6e436f6e74726163742c6279746573206164646974696f6e616c56616c69646174696f6e4461746129a2646970667358221220633bd89617fd2d58235bb7dc84fe24c756051abf36223b1d0d030c000362667664736f6c63430008130033",
    "sourceMap": "976:3393:82:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:28;1821:7;:22;976:3393:82;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "976:3393:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1539:23:78;;;;;;;;;;-1:-1:-1;1539:23:78;;;;;;;;;;;;;;208:42:130;196:55;;;178:74;;166:2;151:18;1539:23:78;;;;;;;;404:112:68;;;;;;;;;;-1:-1:-1;404:112:68;;;;;:::i;:::-;;:::i;:::-;;1194:23:78;;;;;;;;;;-1:-1:-1;1194:23:78;;;;;;;;;;;978:14:130;;971:22;953:41;;941:2;926:18;1194:23:78;813:187:130;3943:284:56;;;;;;;;;;-1:-1:-1;3943:284:56;;;;;:::i;:::-;;:::i;1569:204:78:-;;;;;;;;;;-1:-1:-1;1569:204:78;;;;;:::i;:::-;;:::i;2712:542::-;;;;;;:::i;:::-;;:::i;1394:43:56:-;;;;;;;;;;-1:-1:-1;1394:43:56;;;;;;;;350:20:68;;;;;;;;;;-1:-1:-1;350:20:68;;;;;;;;3296:709:78;;;;;;:::i;:::-;;:::i;1815:323::-;;;;;;:::i;:::-;;:::i;2180:490::-;;;;;;:::i;:::-;;:::i;404:112:68:-;553:24;566:10;553:12;:24::i;:::-;548:52;;586:14;;;;;;;;;;;;;;548:52;462:5:::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;491:18:::1;::::0;462:14;;491:18:::1;::::0;::::1;404:112:::0;:::o;3943:284:56:-;553:24:68;566:10;553:12;:24::i;:::-;548:52;;586:14;;;;;;;;;;;;;;548:52;4063:13:56::1;::::0;;::::1;4087:57:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;4159:61:::1;::::0;;4063:13;;;::::1;6224:34:130::0;;;6289:2;6274:18;;6267:43;;;;4159:61:56::1;::::0;6136:18:130;4159:61:56::1;;;;;;;4018:209;3943:284:::0;:::o;1569:204:78:-;1645:11;;;;1641:44;;;1665:20;;;;;;;;;;;;;;1641:44;1695:7;:18;;-1:-1:-1;1723:14:78;;;;1695:18;1723:14;;;;;;1748:18;;1695;;;;;;;;;1748;;;-1:-1:-1;1748:18:78;;;1569:204::o;2712:542::-;2261:21:28;:19;:21::i;:::-;2890:6:78;2867:20:::1;2890:6:::0;2953:55:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2953:55:78;;;;;;;::::1;::::0;::::1;;;;;;2913:95;;3048:9;3043:129;3067:12;3063:1;:16;3043:129;;;3124:33;3132:6;;3139:1;3132:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3143:10;;3154:1;3143:13;;;;;;;:::i;:::-;;;;;;;3124:7;:33::i;:::-;3104:14;3119:1;3104:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:53;3081:3:::1;;3043:129;;;;3192:24;3201:14;3192:8;:24::i;:::-;3226:21;3232:14;3226:5;:21::i;:::-;2857:397;;2303:20:28::0;1716:1;2809:7;:22;2629:209;2303:20;2712:542:78;;;;:::o;3296:709::-;2261:21:28;:19;:21::i;:::-;3523:6:78;3500:20:::1;3523:6:::0;3586:55:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3586:55:78;;;;;;;::::1;::::0;::::1;;;;;;3546:95;;3681:9;3676:129;3700:12;3696:1;:16;3676:129;;;3757:33;3765:6;;3772:1;3765:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3776:10;;3787:1;3776:13;;;;;;;:::i;3757:33::-;3737:14;3752:1;3737:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:53;3714:3:::1;;3676:129;;;;3825:24;3834:14;3825:8;:24::i;:::-;3859:108;::::0;;;;3876:10:::1;::::0;3859:44:::1;::::0;:108:::1;::::0;3917:14;;3945:12;;;;3859:108:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3977:21;3983:14;3977:5;:21::i;:::-;3490:515;;2303:20:28::0;1716:1;2809:7;:22;2629:209;2303:20;3296:709:78;;;;;;:::o;1815:323::-;2261:21:28;:19;:21::i;:::-;1989:22:78::1;::::0;;2009:1:::1;1989:22:::0;;;;;::::1;::::0;;;1949:37:::1;::::0;1989:22:::1;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1989:22:78;;;;;;;::::1;::::0;::::1;;;;;1949:62;;2041:24;2049:5;2056:8;2041:7;:24::i;:::-;2021:14;2036:1;2021:17;;;;;;;;:::i;:::-;;;;;;:44;;;;2076:24;2085:14;2076:8;:24::i;:::-;2110:21;2116:14;2110:5;:21::i;:::-;1939:199;2303:20:28::0;1716:1;2809:7;:22;2629:209;2303:20;1815:323:78;;:::o;2180:490::-;2261:21:28;:19;:21::i;:::-;2403:22:78::1;::::0;;2423:1:::1;2403:22:::0;;;;;::::1;::::0;;;2363:37:::1;::::0;2403:22:::1;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2403:22:78;;;;;;;::::1;::::0;::::1;;;;;2363:62;;2455:24;2463:5;2470:8;2455:7;:24::i;:::-;2435:14;2450:1;2435:17;;;;;;;;:::i;:::-;;;;;;:44;;;;2490:24;2499:14;2490:8;:24::i;:::-;2524:108;::::0;;;;2541:10:::1;::::0;2524:44:::1;::::0;:108:::1;::::0;2582:14;;2610:12;;;;2524:108:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2642:21;2648:14;2642:5;:21::i;:::-;2353:317;2303:20:28::0;1716:1;2809:7;:22;2629:209;624:177:68;682:4;709:5;;;;;;702:12;;;;698:97;;-1:-1:-1;737:4:68;;624:177;-1:-1:-1;624:177:68:o;698:97::-;-1:-1:-1;779:5:68;;624:177;-1:-1:-1;624:177:68:o;698:97::-;624:177;;;:::o;2336:287:28:-;1759:1;2468:7;;:19;2460:63;;;;;;;11369:2:130;2460:63:28;;;11351:21:130;11408:2;11388:18;;;11381:30;11447:33;11427:18;;;11420:61;11498:18;;2460:63:28;;;;;;;;;1759:1;2598:18;;2336:287::o;1846:1162:82:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:17:82;:11;;:17;:::i;:::-;2043:79;;;;;;;:::i;:::-;2015:107;;2133:21;2148:5;2133:14;:21::i;:::-;2261:20;;;;2295:18;;;;2230:11;;;;2204:23;;2230:93;;:17;:93::i;:::-;2204:119;;2333:28;2364:95;2397:5;:20;;;2431:5;:18;;;2364:5;:13;;;:19;;:95;;;;;:::i;:::-;2333:126;;2532:106;2569:5;2588:7;2609:5;:19;;;2532:8;:23;;:106;;;;;;:::i;:::-;2665:177;;;;;;;;2699:10;;2665:177;;;;;;;;;;;;;;;2513:125;;-1:-1:-1;2513:125:82;;-1:-1:-1;2665:177:82;;;;2784:15;;;;:11;:15;:::i;:::-;2665:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2665:177:82;;;-1:-1:-1;2665:177:82;;2819:12;:5;:10;:12::i;:::-;2665:177;;2894:21;;;;2929:20;;;;2963:28;;;;2649:193;;-1:-1:-1;2852:149:82;;2649:193;;2894:21;2929:20;2852:28;:149::i;:::-;2005:1003;;;1846:1162;;;;:::o;4153:404:78:-;4244:13;;4221:20;4291:250;4315:12;4311:1;:16;4291:250;;;4352:26;4381:6;4388:1;4381:9;;;;;;;;:::i;:::-;;;;;;;4352:38;;4408:18;4420:5;4408:11;:18::i;:::-;4444:26;:5;4459:10;4444:14;:26::i;:::-;4488:38;4508:5;4515:10;4488:19;:38::i;:::-;-1:-1:-1;4329:3:78;;4291:250;;;;4211:346;4153:404;:::o;4679:1365::-;4767:13;;4744:20;4947:634;4971:12;4967:1;:16;4947:634;;;5008:34;5045:6;5052:1;5045:9;;;;;;;;:::i;:::-;;;;;;;5008:46;;5072:21;5096:13;:21;;;:28;5072:52;;5147:9;5142:217;5166:13;5162:1;:17;5142:217;;;5208:25;5236:13;:21;;;5258:1;5236:24;;;;;;;;:::i;:::-;;;;;;;5208:52;;5282:58;5308:6;:16;;;5326:6;:13;;;5282:6;:12;;;:25;;;;:58;;;;;:::i;:::-;-1:-1:-1;5181:3:78;;5142:217;;;;5476:13;:18;;;:26;;;5382:184;;5444:10;5382:184;;5408:6;5415:1;5408:9;;;;;;;;:::i;:::-;;;;;;;:14;;;5382:184;5524:13;:18;;;:24;;;5382:184;;;;18211:25:130;;18199:2;18184:18;;18065:177;5382:184:78;;;;;;;;-1:-1:-1;;4985:3:78;;4947:634;;;-1:-1:-1;5921:21:78;:25;5917:121;;5962:65;5993:10;6005:21;5962:30;:65::i;3811:556:82:-;3890:5;:13;;;:20;3914:1;3890:25;3886:56;;3924:18;;;;;;;;;;;;;;3886:56;3979:18;;;;3957:10;;:19;;;:40;3953:88;;;4018:23;;;;;;;;;;;;;;3953:88;4077:5;:20;;;4056:5;:18;;;:41;4052:95;;;4118:29;;;;;;;;;;;;;;4052:95;4189:11;;;;:21;;;;4162:23;;;;;:48;4158:203;;4262:5;:13;;;4276:1;4262:16;;;;;;;;:::i;:::-;;;;;;;:26;;;4230:5;:13;;;4244:1;4230:16;;;;;;;;:::i;:::-;;;;;;;:28;;;:58;4226:125;;4315:21;;;;;;;;;;;;;;4226:125;3811:556;:::o;3946:462:69:-;4079:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;4079:24:69;4143:5;:15;;;4123:5;:17;;;:35;4119:91;;;4181:18;;;;;;;;;;;;;;4119:91;4220:20;4243:85;4263:5;:17;;;4282:5;:15;;;4299:14;4315:12;4243:19;:85::i;:::-;4347:54;;;;;;;;4358:11;;4347:54;;;;;;;;;;;4385:15;;;;4347:54;;;;;;;-1:-1:-1;4347:54:69;;3946:462;-1:-1:-1;;;3946:462:69:o;3221:453::-;3425:14;;3359:27;;3425:14;3458:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3458:31:69;;;;;;;;;;;;;;;3449:40;;3528:9;3523:135;3547:12;3543:1;:16;3523:135;;;3596:47;3602:7;3610:1;3602:10;;;;;;;;:::i;:::-;;;;;;;3614:14;3630:12;3596:5;:47::i;:::-;3584:6;3591:1;3584:9;;;;;;;;:::i;:::-;;;;;;;;;;:59;3561:3;;3523:135;;;;3392:282;3221:453;;;;;:::o;3565:663:75:-;3745:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3745:17:75;3764:20;3796:47;3815:13;3830:5;:12;;;3796:18;:47::i;:::-;3854:13;3870:49;3888:6;3895:1;3888:9;;;;;;;;:::i;:::-;;;;;;;:16;;;3906:5;:12;;;3870:8;:17;;:49;;;;;:::i;:::-;3854:65;;3930:152;3962:8;3984:5;4003;:12;;;4029:6;4036:1;4029:9;;;;;;;;:::i;:::-;;;;;;;:16;;;4059:13;3930:18;:152::i;:::-;4146:8;4131:5;:12;;:23;;;;;4183:5;4164:6;4171:1;4164:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;:24;-1:-1:-1;4207:5:75;;4214:6;;-1:-1:-1;3565:663:75;;-1:-1:-1;;;3565:663:75:o;5584:653::-;2046:440;;19471:15:130;2046:440:75;;;19459:28:130;19517:17;19503:12;;;19496:39;19565:25;19551:12;;;19544:47;19621:23;19607:12;;;19600:45;19675:26;19661:12;;;19654:48;19732:33;19718:12;;;19711:55;19797:21;19782:13;;;19775:44;19850:27;19835:13;;;19828:50;19909:25;19894:13;;;19887:48;19966:24;19951:13;;;19944:47;20022:24;20007:13;;;20000:47;5662:7:75;;20063:13:130;;2046:440:75;;;;;;;;;;2599:31;;;;;;;;;;2046:440;;;2599:31;2046:440;2599:31;;;2644:28;;;;;;;;;;;;;;;;;2537:145;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2732:21;;;;;;5796:17;:5;:10;;;:15;:17::i;:::-;5835:5;:20;;;5877:5;:18;;;5917:5;:21;;;5960:5;:28;;;6010:5;:11;;;:17;;;6049:5;:11;;;:23;;;6094:5;:11;;;:21;;;6137:20;:5;:13;;;:18;:20::i;:::-;6179:19;;;;;5727:489;;;;;;21232:25:130;;;;21273:18;;21266:34;;;;21316:18;;;21309:34;;;;21359:18;;;21352:34;;;;21405:42;21484:15;;;21463:19;;;21456:44;-1:-1:-1;21516:19:130;;21509:35;;;;21581:15;;21560:19;;;21553:44;;;;21613:19;;;21606:35;21657:19;;;21650:35;;;;21701:19;;;21694:35;21745:19;;;21738:36;21204:19;;5727:489:75;;;;;;;;;;;;;5700:530;;;;;;5681:549;;5584:653;;;:::o;1081:920:72:-;1351:47;1368:9;1379:18;1351:16;:47::i;:::-;1414:7;1347:84;1535:22;1531:103;;1602:21;;;;;;;;;;;;;;1531:103;1719:13;;;;1688:28;1742:253;1766:7;:14;1762:1;:18;1742:253;;;1797:25;1825:7;1833:1;1825:10;;;;;;;;:::i;:::-;;;;;;;1797:38;;1865:59;1896:22;751:6;1890:28;;;;:::i;:::-;1865:13;;;;;751:6;1865:24;:59::i;:::-;1849:13;;;;:75;1967:3;;1742:253;;1611:2181:56;1696:13;;1688:36;1696:13;1684:73;;1611:2181;:::o;1684:73::-;1801:13;;:34;;;;;1767:31;;1801:13;;;:27;;:34;;1829:5;;1801:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1869:13;;;;:20;1926:17;;1767:68;;-1:-1:-1;1869:20:56;1845:21;2093:32;1926:17;1869:20;2093:32;:::i;:::-;2062:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;2062:73:56;;;;;;;;;;;;;;;2028:107;;2175:9;2170:109;2194:13;2190:1;:17;2170:109;;;2248:5;:13;;;2262:1;2248:16;;;;;;;;:::i;:::-;;;;;;;2232:10;2243:1;2232:13;;;;;;;;:::i;:::-;;;;;;;;;;:32;2209:3;;2170:109;;;;2304:9;2299:1450;2323:16;2319:1;:20;2299:1450;;;2357:28;2388:10;2399:1;2388:13;;;;;;;;:::i;:::-;;;;;;;2357:44;;2484:9;2479:207;2503:1;2499;:5;2479:207;;;2556:10;2567:1;2556:13;;;;;;;;:::i;:::-;;;;;;;:19;;;2537:38;;:9;:15;;;:38;;;2533:135;;2629:15;;2610:35;;;;;208:42:130;196:55;;;2610:35:56;;;178:74:130;151:18;;2610:35:56;14:244:130;2533:135:56;2506:3;;2479:207;;;-1:-1:-1;2765:18:56;;2797:311;2821:13;2817:1;:17;2797:311;;;2856:25;2884:5;:13;;;2898:1;2884:16;;;;;;;;:::i;:::-;;;;;;;2856:44;;2938:9;:15;;;2922:31;;:6;:12;;;:31;;;2918:105;;2991:13;;;;2977:27;;;;:::i;:::-;;;2918:105;-1:-1:-1;3072:3:56;;2797:311;;;-1:-1:-1;3204:15:56;;3182:11;;;;:17;3174:45;;;;;;;3170:116;;3253:11;;;;;:18;;3239:32;;;;:::i;:::-;;;3170:116;3304:10;3318:1;3304:15;3300:60;;3344:15;;3328:32;;;;;208:42:130;196:55;;;3328:32:56;;;178:74:130;151:18;;3328:32:56;14:244:130;3300:60:56;3398:39;:10;1339:1;1288:6;3398:21;:39::i;:::-;3379:9;:16;;;:58;3375:249;;;3497:15;;3534:16;;;;3572:19;;;;;3464:145;;;;;24059:42:130;24128:15;;;3464:145:56;;;24110:34:130;24160:18;;;24153:34;;;;24223:15;;;;24203:18;;;24196:43;24022:18;;3464:145:56;23847:398:130;3375:249:56;3669:9;3637:10;3648:17;3664:1;3648:13;:17;:::i;:::-;3637:29;;;;;;;;:::i;:::-;;;;;;;;;;:41;-1:-1:-1;;3721:3:56;;2299:1450;;;-1:-1:-1;3759:13:56;;;;:26;;;;-1:-1:-1;;;1611:2181:56:o;518:505:77:-;641:18;;:26;616:52;;624:4;616:52;612:106;;691:16;;;;;;;;;;;;;;612:106;750:18;;:27;;;732:15;:45;728:99;;;800:16;;;;;;;;;;;;;;728:99;849:18;;:47;;;841:70;;;837:180;;927:18;;:47;;;:79;;;;;:56;;;;;;;:79;;984:6;;927:13;;:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3053:364:82;3172:7;;;;;;;:33;3219:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:303:76;;;624:149;;;;;693:11;;;;;;:17;624:149;;561:303;;;;624:149;;;737:11;;:21;;;624:149;;;;561:303;;794:10;;:16;;;561:303;;;;;;;834:10;;:19;;;;561:303;;;;;401:470;3219:16:82;-1:-1:-1;;;;;;;;;;;;;;;;;1123:90:76;;;;;;;;;;;;;1193:11;;;;:18;;;1123:90;;;;3288:5:82;:10;;;:18;;;3320:5;:10;;;3005:31:75;;;;;;;;;;;;;;;;;2046:440;;;19471:15:130;2046:440:75;;;19459:28:130;19517:17;19503:12;;;19496:39;19565:25;19551:12;;;19544:47;19621:23;19607:12;;;19600:45;19675:26;19661:12;;;19654:48;19732:33;19718:12;;;19711:55;19797:21;19782:13;;;19775:44;19850:27;19835:13;;;19828:50;19909:25;19894:13;;;19887:48;19966:24;19951:13;;;19944:47;20022:24;20007:13;;;20000:47;2046:440:75;;;;;;;;;3090:28;;;;;;;20063:13:130;;;3090:28:75;;;20063:13:130;3090:28:75;;;;;3136:36;;;;;;;;;;;;;;;;;2930:256;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3391:9:82;;;;3172:238;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:434:67;2584:18;;;1623:334;;1746:33;1761:9;1772:6;1746:14;:33::i;1623:334::-;1883:63;:32;;;1916:10;1928:9;1939:6;1883:32;:63::i;2135:221::-;2214:12;2231:9;:14;;2253:6;444:4;2231:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:83;;;2311:7;2306:43;;2327:22;;;;;;;;;;;;;;1211:965:69;1359:21;1415:14;1400:12;:29;1396:774;;;1452:24;;;;;;;;;;;;;;1396:774;1513:15;1497:12;:31;1493:677;;-1:-1:-1;1560:9:69;1493:677;;;1608:15;1590:14;:33;1586:584;;-1:-1:-1;1655:11:69;1586:584;;;1743:15;:32;;;1812:29;;;1863:23;;;1859:287;;;1940:55;1941:23;;;1977:7;1986:8;1940:36;:55::i;:::-;1926:11;:69;1910:85;;1859:287;;;2072:55;2073:23;;;2109:7;2118:8;2072:36;:55::i;:::-;2058:11;:69;2042:85;;1859:287;1697:463;;1586:584;1211:965;;;;;;:::o;2452:474::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;2653:6:69;:16;;;2632:6;:18;;;:37;2628:93;;;2692:18;;;;;;;;;;;;;;2628:93;2731:21;2755:87;2775:6;:18;;;2795:6;:16;;;2813:14;2829:12;2755:19;:87::i;:::-;2731:111;;2861:58;;;;;;;;2873:6;:12;;;2861:58;;;;;;2887:13;2861:58;;;;2902:6;:16;;;2861:58;;;;;2852:67;;2618:308;2452:474;;;;;:::o;5288:175:75:-;5423:6;5406:14;:23;5402:54;;;5438:18;;;;;;;;;;;;;;2096:672:48;2210:9;2458:1;2445:11;2441:19;2438:1;2435:26;2432:1;2428:34;2421:42;2408:11;2404:60;2394:116;;2494:1;2491;2484:12;2394:116;-1:-1:-1;2728:9:48;;2691:27;;;2688:34;;2724:27;;;2684:68;;2096:672::o;4495:636:75:-;4703:7;4691:9;:19;:40;;;;4723:8;4714:6;:17;4691:40;4687:86;;;4752:21;;;;;;;;;;;;;;4687:86;4787:14;;;:29;;-1:-1:-1;4805:11:75;;4787:29;4783:64;;;4825:22;;;;;;;;;;;;;;4783:64;4873:14;4861:9;:26;4857:60;;;4896:21;;;;;;;;;;;;;;4857:60;4965:12;5005:7;4981:20;4993:8;4981:9;:20;:::i;:::-;4980:32;;;;:::i;:::-;4965:47;-1:-1:-1;5022:13:75;5054:19;5064:9;5054:7;:19;:::i;:::-;5038:12;:4;5045:5;5038:12;:::i;:::-;:35;;;;-1:-1:-1;5084:40:75;;5105:19;;;;;;;;;;;;;;5084:40;4677:454;;4495:636;;;;;:::o;574:416:74:-;634:7;461:15;;;;;;;;;;;;;;;;;451:26;;;;;;;749:12;;779;;;;809:10;;;;;837:13;;;;868:33;;;;929:29;;;;919:40;;;;;;683:290;;;;809:10;;837:13;;868:33;;919:40;683:290;28046:25:130;;;28090:42;28168:15;;;28163:2;28148:18;;28141:43;28220:15;;;28215:2;28200:18;;28193:43;28267:2;28252:18;;28245:34;;;;28310:3;28295:19;;28288:35;28360:15;;;28354:3;28339:19;;28332:44;28407:3;28392:19;;28385:35;28033:3;28018:19;;27684:742;3091:487:70;3158:7;3201:25;3244:7;:14;3239:2;:19;3229:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3229:30:70;;3201:58;;3279:9;3274:243;3298:7;:14;3294:1;:18;3274:243;;;3337:18;3358:16;3363:7;3371:1;3363:10;;;;;;;;:::i;:::-;;;;;;;3358:4;:16::i;:::-;3466:4;3459:12;;;3430:42;;;3423:62;-1:-1:-1;3314:3:70;;3274:243;;;-1:-1:-1;3538:23:70;;;;;;;;3091:487;-1:-1:-1;;3091:487:70:o;2361:221:72:-;2457:9;2485:23;;;;;:63;;;2530:18;2512:15;:36;2485:63;:90;;;-1:-1:-1;2552:23:72;;;2565:10;2552:23;2485:90;2478:97;;2361:221;;;;;:::o;1564:526:48:-;1680:9;1928:1;1915:11;1911:19;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:48;;2047:27;;1564:526::o;1328:1782:49:-;1466:12;1636:4;1630:11;1778:66;1759:17;1752:93;1902:42;1896:4;1892:53;1888:1;1869:17;1865:25;1858:88;2042:42;2038:2;2034:51;2029:2;2010:17;2006:26;1999:87;2172:6;2167:2;2148:17;2144:26;2137:42;3026:2;3023:1;3018:3;2999:17;2996:1;2989:5;2982;2977:52;2545:16;2538:24;2532:2;2514:16;2511:24;2507:1;2503;2497:8;2494:15;2490:46;2487:76;2287:756;2276:767;;;3071:7;3063:40;;;;;;;28633:2:130;3063:40:49;;;28615:21:130;28672:2;28652:18;;;28645:30;28711:22;28691:18;;;28684:50;28751:18;;3063:40:49;28431:344:130;3063:40:49;1456:1654;1328:1782;;;;:::o;2728:234:70:-;2792:7;1695:17;;;;;;;;;;;;;;;;;1685:28;;;;;;;2876:12;;2890:18;;;;2910:16;;;;;2928;;;;2841:104;;;;2910:16;;2928;2841:104;29039:25:130;;;29083:42;29161:15;;;29156:2;29141:18;;29134:43;29208:2;29193:18;;29186:34;;;;29251:2;29236:18;;29229:34;29300:15;29294:3;29279:19;;29272:44;29026:3;29011:19;;28780:542;263:154;349:42;342:5;338:54;331:5;328:65;318:93;;407:1;404;397:12;422:134;490:20;;519:31;490:20;519:31;:::i;561:247::-;620:6;673:2;661:9;652:7;648:23;644:32;641:52;;;689:1;686;679:12;641:52;728:9;715:23;747:31;772:5;747:31;:::i;:::-;797:5;561:247;-1:-1:-1;;;561:247:130:o;1005:406::-;1091:6;1099;1152:2;1140:9;1131:7;1127:23;1123:32;1120:52;;;1168:1;1165;1158:12;1120:52;1207:9;1194:23;1226:31;1251:5;1226:31;:::i;:::-;1276:5;-1:-1:-1;1333:2:130;1318:18;;1305:32;1346:33;1305:32;1346:33;:::i;:::-;1398:7;1388:17;;;1005:406;;;;;:::o;1416:387::-;1499:8;1509:6;1563:3;1556:4;1548:6;1544:17;1540:27;1530:55;;1581:1;1578;1571:12;1530:55;-1:-1:-1;1604:20:130;;1647:18;1636:30;;1633:50;;;1679:1;1676;1669:12;1633:50;1716:4;1708:6;1704:17;1692:29;;1776:3;1769:4;1759:6;1756:1;1752:14;1744:6;1740:27;1736:38;1733:47;1730:67;;;1793:1;1790;1783:12;1730:67;1416:387;;;;;:::o;1808:845::-;1962:6;1970;1978;1986;2039:2;2027:9;2018:7;2014:23;2010:32;2007:52;;;2055:1;2052;2045:12;2007:52;2095:9;2082:23;2124:18;2165:2;2157:6;2154:14;2151:34;;;2181:1;2178;2171:12;2151:34;2220:90;2302:7;2293:6;2282:9;2278:22;2220:90;:::i;:::-;2329:8;;-1:-1:-1;2194:116:130;-1:-1:-1;2417:2:130;2402:18;;2389:32;;-1:-1:-1;2433:16:130;;;2430:36;;;2462:1;2459;2452:12;2430:36;;2501:92;2585:7;2574:8;2563:9;2559:24;2501:92;:::i;:::-;1808:845;;;;-1:-1:-1;2612:8:130;-1:-1:-1;;;;1808:845:130:o;3152:347::-;3203:8;3213:6;3267:3;3260:4;3252:6;3248:17;3244:27;3234:55;;3285:1;3282;3275:12;3234:55;-1:-1:-1;3308:20:130;;3351:18;3340:30;;3337:50;;;3383:1;3380;3373:12;3337:50;3420:4;3412:6;3408:17;3396:29;;3472:3;3465:4;3456:6;3448;3444:19;3440:30;3437:39;3434:59;;;3489:1;3486;3479:12;3504:1132;3678:6;3686;3694;3702;3710;3718;3771:2;3759:9;3750:7;3746:23;3742:32;3739:52;;;3787:1;3784;3777:12;3739:52;3827:9;3814:23;3856:18;3897:2;3889:6;3886:14;3883:34;;;3913:1;3910;3903:12;3883:34;3952:90;4034:7;4025:6;4014:9;4010:22;3952:90;:::i;:::-;4061:8;;-1:-1:-1;3926:116:130;-1:-1:-1;4149:2:130;4134:18;;4121:32;;-1:-1:-1;4165:16:130;;;4162:36;;;4194:1;4191;4184:12;4162:36;4233:92;4317:7;4306:8;4295:9;4291:24;4233:92;:::i;:::-;4344:8;;-1:-1:-1;4207:118:130;-1:-1:-1;4432:2:130;4417:18;;4404:32;;-1:-1:-1;4448:16:130;;;4445:36;;;4477:1;4474;4467:12;4445:36;;4516:60;4568:7;4557:8;4546:9;4542:24;4516:60;:::i;:::-;3504:1132;;;;-1:-1:-1;3504:1132:130;;-1:-1:-1;3504:1132:130;;4595:8;;3504:1132;-1:-1:-1;;;3504:1132:130:o;4641:159::-;4705:5;4750:2;4741:6;4736:3;4732:16;4728:25;4725:45;;;4766:1;4763;4756:12;4725:45;-1:-1:-1;4788:6:130;4641:159;-1:-1:-1;4641:159:130:o;4805:433::-;4905:6;4913;4966:2;4954:9;4945:7;4941:23;4937:32;4934:52;;;4982:1;4979;4972:12;4934:52;5022:9;5009:23;5055:18;5047:6;5044:30;5041:50;;;5087:1;5084;5077:12;5041:50;5110:71;5173:7;5164:6;5153:9;5149:22;5110:71;:::i;:::-;5100:81;5228:2;5213:18;;;;5200:32;;-1:-1:-1;;;;4805:433:130:o;5243:741::-;5363:6;5371;5379;5387;5440:2;5428:9;5419:7;5415:23;5411:32;5408:52;;;5456:1;5453;5446:12;5408:52;5496:9;5483:23;5525:18;5566:2;5558:6;5555:14;5552:34;;;5582:1;5579;5572:12;5552:34;5605:71;5668:7;5659:6;5648:9;5644:22;5605:71;:::i;:::-;5595:81;;5723:2;5712:9;5708:18;5695:32;5685:42;;5780:2;5769:9;5765:18;5752:32;5736:48;;5809:2;5799:8;5796:16;5793:36;;;5825:1;5822;5815:12;5793:36;;5864:60;5916:7;5905:8;5894:9;5890:24;5864:60;:::i;6321:184::-;6373:77;6370:1;6363:88;6470:4;6467:1;6460:15;6494:4;6491:1;6484:15;6510:184;6562:77;6559:1;6552:88;6659:4;6656:1;6649:15;6683:4;6680:1;6673:15;6699:388;6797:4;6855:11;6842:25;6945:66;6934:8;6918:14;6914:29;6910:102;6890:18;6886:127;6876:155;;7027:1;7024;7017:12;6876:155;7048:33;;;;;6699:388;-1:-1:-1;;6699:388:130:o;7092:250::-;7177:1;7187:113;7201:6;7198:1;7195:13;7187:113;;;7277:11;;;7271:18;7258:11;;;7251:39;7223:2;7216:10;7187:113;;;-1:-1:-1;;7334:1:130;7316:16;;7309:27;7092:250::o;7347:329::-;7388:3;7426:5;7420:12;7453:6;7448:3;7441:19;7469:76;7538:6;7531:4;7526:3;7522:14;7515:4;7508:5;7504:16;7469:76;:::i;:::-;7590:2;7578:15;7595:66;7574:88;7565:98;;;;7665:4;7561:109;;7347:329;-1:-1:-1;;7347:329:130:o;7942:696::-;8006:3;8044:5;8038:12;8071:6;8066:3;8059:19;8097:4;8126:2;8121:3;8117:12;8110:19;;8163:2;8156:5;8152:14;8184:1;8194:419;8208:6;8205:1;8202:13;8194:419;;;8267:13;;8374:9;;8303:42;8370:18;;;8358:31;;8429:11;;;8423:18;8409:12;;;8402:40;8465:4;8513:11;;;8507:18;8503:27;8489:12;;;8482:49;8560:4;8551:14;;;;8588:15;;;;8230:1;8223:9;8194:419;;;-1:-1:-1;8629:3:130;;7942:696;-1:-1:-1;;;;;7942:696:130:o;8643:1240::-;8699:3;8743:5;8737:12;8770:4;8765:3;8758:17;8794:42;8893:2;8878:12;8872:19;8868:28;8861:4;8856:3;8852:14;8845:52;8964:2;8956:4;8942:12;8938:23;8932:30;8928:39;8922:3;8917;8913:13;8906:62;9023:4;9009:12;9005:23;8999:30;8993:3;8988;8984:13;8977:53;9085:4;9071:12;9067:23;9061:30;9055:3;9050;9046:13;9039:53;9159:2;9151:4;9137:12;9133:23;9127:30;9123:39;9117:3;9112;9108:13;9101:62;;9218:4;9204:12;9200:23;9194:30;9172:52;;9255:4;9249:3;9244;9240:13;9233:27;9282:47;9324:3;9319;9315:13;9299:14;9282:47;:::i;:::-;9269:60;;9377:4;9370:5;9366:16;9360:23;9392:60;9446:4;9441:3;9437:14;9421;7761:12;;7775:42;7757:61;7745:74;;7868:4;7857:16;;;7851:23;7835:14;;;7828:47;7924:4;7913:16;;;7907:23;7891:14;;7884:47;7681:256;9392:60;;9500:4;9493:5;9489:16;9483:23;9549:3;9542:5;9538:15;9531:4;9526:3;9522:14;9515:39;9575:62;9631:5;9615:14;9575:62;:::i;:::-;9563:74;;;9685:4;9678:5;9674:16;9668:23;9733:3;9727:4;9723:14;9716:4;9711:3;9707:14;9700:38;9761;9794:4;9778:14;9761:38;:::i;:::-;9747:52;;;9848:4;9841:5;9837:16;9831:23;9824:4;9819:3;9815:14;9808:47;9871:6;9864:13;;;8643:1240;;;;:::o;9888:1274::-;10150:4;10198:2;10187:9;10183:18;10228:2;10217:9;10210:21;10251:6;10286;10280:13;10317:6;10309;10302:22;10355:2;10344:9;10340:18;10333:25;;10417:2;10407:6;10404:1;10400:14;10389:9;10385:30;10381:39;10367:53;;10439:4;10478:2;10470:6;10466:15;10499:1;10509:328;10523:6;10520:1;10517:13;10509:328;;;10612:66;10600:9;10592:6;10588:22;10584:95;10579:3;10572:108;10703:54;10750:6;10741;10735:13;10703:54;:::i;:::-;10693:64;-1:-1:-1;10815:12:130;;;;10780:15;;;;10545:1;10538:9;10509:328;;;10513:3;;10885:9;10877:6;10873:22;10868:2;10857:9;10853:18;10846:50;10920:6;10912;10905:22;10974:6;10966;10961:2;10953:6;10949:15;10936:45;11027:1;11001:19;;;10997:28;;10990:39;11078:2;11066:15;;;11083:66;11062:88;11050:101;;;11046:110;;;;9888:1274;-1:-1:-1;;;;;;9888:1274:130:o;11527:580::-;11604:4;11610:6;11670:11;11657:25;11760:66;11749:8;11733:14;11729:29;11725:102;11705:18;11701:127;11691:155;;11842:1;11839;11832:12;11691:155;11869:33;;11921:20;;;-1:-1:-1;11964:18:130;11953:30;;11950:50;;;11996:1;11993;11986:12;11950:50;12029:4;12017:17;;-1:-1:-1;12060:14:130;12056:27;;;12046:38;;12043:58;;;12097:1;12094;12087:12;12112:253;12184:2;12178:9;12226:4;12214:17;;12261:18;12246:34;;12282:22;;;12243:62;12240:88;;;12308:18;;:::i;:::-;12344:2;12337:22;12112:253;:::o;12370:::-;12442:2;12436:9;12484:4;12472:17;;12519:18;12504:34;;12540:22;;;12501:62;12498:88;;;12566:18;;:::i;12628:255::-;12700:2;12694:9;12742:6;12730:19;;12779:18;12764:34;;12800:22;;;12761:62;12758:88;;;12826:18;;:::i;12888:334::-;12959:2;12953:9;13015:2;13005:13;;13020:66;13001:86;12989:99;;13118:18;13103:34;;13139:22;;;13100:62;13097:88;;;13165:18;;:::i;:::-;13201:2;13194:22;12888:334;;-1:-1:-1;12888:334:130:o;13227:589::-;13269:5;13322:3;13315:4;13307:6;13303:17;13299:27;13289:55;;13340:1;13337;13330:12;13289:55;13376:6;13363:20;13402:18;13398:2;13395:26;13392:52;;;13424:18;;:::i;:::-;13468:114;13576:4;13507:66;13500:4;13496:2;13492:13;13488:86;13484:97;13468:114;:::i;:::-;13607:2;13598:7;13591:19;13653:3;13646:4;13641:2;13633:6;13629:15;13625:26;13622:35;13619:55;;;13670:1;13667;13660:12;13619:55;13735:2;13728:4;13720:6;13716:17;13709:4;13700:7;13696:18;13683:55;13783:1;13758:16;;;13776:4;13754:27;13747:38;;;;13762:7;13227:589;-1:-1:-1;;;13227:589:130:o;13821:1093::-;13877:5;13925:4;13913:9;13908:3;13904:19;13900:30;13897:50;;;13943:1;13940;13933:12;13897:50;13976:2;13970:9;14018:4;14010:6;14006:17;14042:18;14110:6;14098:10;14095:22;14090:2;14078:10;14075:18;14072:46;14069:72;;;14121:18;;:::i;:::-;14161:10;14157:2;14150:22;14190:6;14181:15;;14233:9;14220:23;14205:38;;14252:33;14277:7;14252:33;:::i;:::-;14294:23;;;14369:2;14354:18;;14341:32;;14382:33;14341:32;14382:33;:::i;:::-;14448:7;14443:2;14435:6;14431:15;14424:32;14517:2;14506:9;14502:18;14489:32;14484:2;14476:6;14472:15;14465:57;14583:2;14572:9;14568:18;14555:32;14550:2;14542:6;14538:15;14531:57;14640:3;14629:9;14625:19;14612:33;14597:48;;14654:33;14679:7;14654:33;:::i;:::-;14721:7;14715:3;14707:6;14703:16;14696:33;14780:3;14769:9;14765:19;14752:33;14738:47;;14808:2;14800:6;14797:14;14794:34;;;14824:1;14821;14814:12;14794:34;;14862:45;14903:3;14894:6;14883:9;14879:22;14862:45;:::i;:::-;14856:3;14848:6;14844:16;14837:71;;;13821:1093;;;;:::o;14919:423::-;14976:5;15024:4;15012:9;15007:3;15003:19;14999:30;14996:50;;;15042:1;15039;15032:12;14996:50;15064:22;;:::i;:::-;15055:31;;15123:9;15110:23;15142:33;15167:7;15142:33;:::i;:::-;15198:7;15191:5;15184:22;;15266:2;15255:9;15251:18;15238:32;15233:2;15226:5;15222:14;15215:56;15331:2;15320:9;15316:18;15303:32;15298:2;15291:5;15287:14;15280:56;14919:423;;;;:::o;15347:194::-;15418:4;15451:18;15443:6;15440:30;15437:56;;;15473:18;;:::i;:::-;-1:-1:-1;15518:1:130;15514:14;15530:4;15510:25;;15347:194::o;15546:1295::-;15611:5;15664:3;15657:4;15649:6;15645:17;15641:27;15631:55;;15682:1;15679;15672:12;15631:55;15718:6;15705:20;15744:4;15768:71;15784:54;15835:2;15784:54;:::i;:::-;15768:71;:::i;:::-;15873:15;;;15959:1;15955:10;;;;15943:23;;15939:32;;;15904:12;;;;15983:15;;;15980:35;;;16011:1;16008;16001:12;15980:35;16047:2;16039:6;16035:15;16059:753;16075:6;16070:3;16067:15;16059:753;;;16153:4;16147:3;16142;16138:13;16134:24;16131:114;;;16199:1;16228:2;16224;16217:14;16131:114;16271:22;;:::i;:::-;16334:3;16321:17;16351:33;16376:7;16351:33;:::i;:::-;16397:22;;16468:12;;;16455:26;16439:14;;;16432:50;16505:2;16556:12;;;16543:26;16527:14;;;16520:50;16593:2;16636:12;;;16623:26;16662:33;16623:26;16662:33;:::i;:::-;16715:14;;;16708:31;16752:18;;16790:12;;;;16101:4;16092:14;16059:753;;;-1:-1:-1;16830:5:130;15546:1295;-1:-1:-1;;;;;;15546:1295:130:o;16846:1214::-;16936:6;16989:2;16977:9;16968:7;16964:23;16960:32;16957:52;;;17005:1;17002;16995:12;16957:52;17045:9;17032:23;17074:18;17115:2;17107:6;17104:14;17101:34;;;17131:1;17128;17121:12;17101:34;17154:22;;;;17210:6;17192:16;;;17188:29;17185:49;;;17230:1;17227;17220:12;17185:49;17256:22;;:::i;:::-;17316:2;17303:16;17344:2;17334:8;17331:16;17328:36;;;17360:1;17357;17350:12;17328:36;17387:55;17434:7;17423:8;17419:2;17415:17;17387:55;:::i;:::-;17380:5;17373:70;;17496:2;17492;17488:11;17475:25;17470:2;17463:5;17459:14;17452:49;17554:2;17550;17546:11;17533:25;17528:2;17521:5;17517:14;17510:49;17591:31;17618:2;17614;17610:11;17591:31;:::i;:::-;17586:2;17579:5;17575:14;17568:55;17677:3;17673:2;17669:12;17656:26;17650:3;17643:5;17639:15;17632:51;17716;17759:7;17753:3;17749:2;17745:12;17716:51;:::i;:::-;17710:3;17703:5;17699:15;17692:76;17814:6;17810:2;17806:15;17793:29;17847:2;17837:8;17834:16;17831:36;;;17863:1;17860;17853:12;17831:36;17901:67;17960:7;17949:8;17945:2;17941:17;17901:67;:::i;:::-;17894:4;17883:16;;17876:93;-1:-1:-1;18024:3:130;18016:12;;;;18003:26;17996:4;17985:16;;17978:52;-1:-1:-1;17887:5:130;16846:1214;-1:-1:-1;;;16846:1214:130:o;20087:697::-;20308:3;20346:6;20340:13;20362:66;20421:6;20416:3;20409:4;20401:6;20397:17;20362:66;:::i;:::-;20491:13;;20450:16;;;;20513:70;20491:13;20450:16;20560:4;20548:17;;20513:70;:::i;:::-;20650:13;;20605:20;;;20672:70;20650:13;20605:20;20719:4;20707:17;;20672:70;:::i;:::-;20758:20;;20087:697;-1:-1:-1;;;;;20087:697:130:o;21785:184::-;21837:77;21834:1;21827:88;21934:4;21931:1;21924:15;21958:4;21955:1;21948:15;21974:125;22039:9;;;22060:10;;;22057:36;;;22073:18;;:::i;22104:278::-;22297:2;22286:9;22279:21;22260:4;22317:59;22372:2;22361:9;22357:18;22349:6;22317:59;:::i;22387:1455::-;22512:6;22543:2;22586;22574:9;22565:7;22561:23;22557:32;22554:52;;;22602:1;22599;22592:12;22554:52;22635:9;22629:16;22668:18;22660:6;22657:30;22654:50;;;22700:1;22697;22690:12;22654:50;22723:22;;22776:4;22768:13;;22764:27;-1:-1:-1;22754:55:130;;22805:1;22802;22795:12;22754:55;22834:2;22828:9;22857:71;22873:54;22924:2;22873:54;:::i;22857:71::-;22962:15;;;23024:4;23063:11;;;23055:20;;23051:29;;;22993:12;;;;22950:3;23092:19;;;23089:39;;;23124:1;23121;23114:12;23089:39;23148:11;;;;23168:644;23184:6;23179:3;23176:15;23168:644;;;23264:2;23258:3;23249:7;23245:17;23241:26;23238:116;;;23308:1;23337:2;23333;23326:14;23238:116;23380:22;;:::i;:::-;23436:3;23430:10;23453:33;23478:7;23453:33;:::i;:::-;23499:22;;23563:12;;;23557:19;23541:14;;;23534:43;23600:2;23636:12;;;23630:19;23662:33;23630:19;23662:33;:::i;:::-;23715:14;;;23708:31;23752:18;;23201:12;;;;23790;;;;23168:644;;;-1:-1:-1;23831:5:130;22387:1455;-1:-1:-1;;;;;;;22387:1455:130:o;24250:398::-;24483:42;24475:6;24471:55;24460:9;24453:74;24563:2;24558;24547:9;24543:18;24536:30;24434:4;24583:59;24638:2;24627:9;24623:18;24615:6;24583:59;:::i;24653:1068::-;25053:23;25048:3;25041:36;25023:3;25106:6;25100:13;25122:75;25190:6;25185:2;25180:3;25176:12;25169:4;25161:6;25157:17;25122:75;:::i;:::-;25257:13;;25216:16;;;;25279:76;25257:13;25341:2;25333:11;;25326:4;25314:17;;25279:76;:::i;:::-;25416:13;;25374:17;;;25438:76;25416:13;25500:2;25492:11;;25485:4;25473:17;;25438:76;:::i;:::-;25575:13;;25533:17;;;25597:76;25575:13;25659:2;25651:11;;25644:4;25632:17;;25597:76;:::i;:::-;25693:17;25712:2;25689:26;;24653:1068;-1:-1:-1;;;;;;24653:1068:130:o;25937:1088::-;26367:4;26396:3;26408:60;26458:9;26449:6;26443:13;25812:12;;25826:42;25808:61;25796:74;;25919:4;25908:16;;;25902:23;25886:14;;25879:47;25726:206;26408:60;26524:4;26516:6;26512:17;26506:24;26499:4;26488:9;26484:20;26477:54;26587:4;26579:6;26575:17;26569:24;26562:4;26551:9;26547:20;26540:54;26603:63;26661:3;26650:9;26646:19;26638:6;25812:12;;25826:42;25808:61;25796:74;;25919:4;25908:16;;;25902:23;25886:14;;25879:47;25726:206;26603:63;26715:42;26707:6;26703:55;26697:3;26686:9;26682:19;26675:84;26796:6;26790:3;26779:9;26775:19;26768:35;26840:2;26834:3;26823:9;26819:19;26812:31;26866:44;26906:2;26895:9;26891:18;26883:6;26866:44;:::i;:::-;26852:58;;26959:9;26951:6;26947:22;26941:3;26930:9;26926:19;26919:51;26987:32;27012:6;27004;26987:32;:::i;:::-;26979:40;25937:1088;-1:-1:-1;;;;;;;;;25937:1088:130:o;27240:168::-;27313:9;;;27344;;27361:15;;;27355:22;;27341:37;27331:71;;27382:18;;:::i;27413:266::-;27445:1;27471;27461:189;;27506:77;27503:1;27496:88;27607:4;27604:1;27597:15;27635:4;27632:1;27625:15;27461:189;-1:-1:-1;27664:9:130;;27413:266::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execute((bytes,bytes),uint256)": "dc081cc9",
    "executeBatch((bytes,bytes)[],uint256[])": "6411e816",
    "executeBatchWithCallback((bytes,bytes)[],uint256[],bytes)": "bccd8d09",
    "executeWithCallback((bytes,bytes),uint256,bytes)": "e767b794",
    "feeController()": "6999b377",
    "initialize(address,address)": "485cc955",
    "initialized()": "158ef93e",
    "owner()": "8da5cb5b",
    "permit2()": "12261ee7",
    "setOwner(address)": "13af4035",
    "setProtocolFeeController(address)": "2d771389"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineBeforeEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"duplicateToken\",\"type\":\"address\"}],\"name\":\"DuplicateFeeOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAndOutputDecay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"InvalidFeeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOutLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExclusiveOverride\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderEndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PartialFillOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PartialFillUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuantityLtThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelativeErrTooBig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Fill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldFeeController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"executeBatchWithCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"executeWithCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"_permit2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"params\":{\"filler\":\"The address which executed the fill\",\"nonce\":\"The nonce of the filled order\",\"orderHash\":\"The hash of the order that was filled\",\"swapper\":\"The swapper of the filled order\"}}},\"kind\":\"dev\",\"methods\":{\"execute((bytes,bytes),uint256)\":{\"params\":{\"order\":\"The order definition and valid signature to execute.\",\"quantity\":\"An amount in a form of input token, to take from the order.\"}},\"executeBatch((bytes,bytes)[],uint256[])\":{\"params\":{\"orders\":\"The order definitions and valid signatures to execute.\",\"quantities\":\"Amounts in a form of input tokens, to take from orders.\"}},\"executeBatchWithCallback((bytes,bytes)[],uint256[],bytes)\":{\"params\":{\"callbackData\":\"The 'callbackData' to pass to the callback.\",\"orders\":\"The order definitions and valid signatures to execute.\",\"quantities\":\"Amounts in a form of input tokens, to take from orders.\"}},\"executeWithCallback((bytes,bytes),uint256,bytes)\":{\"params\":{\"callbackData\":\"The 'callbackData' to pass to the callback.\",\"order\":\"The order definition and valid signature to execute.\",\"quantity\":\"An amount in a form of input token, to take from the order.\"}},\"setProtocolFeeController(address)\":{\"details\":\"only callable by the owner\",\"params\":{\"_newFeeController\":\"the new fee controller\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlineBeforeEndTime()\":[{\"notice\":\"Thrown when an order's deadline is before its end time.\"}],\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"DuplicateFeeOutput(address)\":[{\"notice\":\"thrown if two fee outputs have the same token\"}],\"EndTimeBeforeStartTime()\":[{\"notice\":\"thrown if the endTime of an order is before startTime\"}],\"FeeTooLarge(address,uint256,address)\":[{\"notice\":\"thrown if a given fee output is greater than MAX_FEE_BPS of the order outputs\"}],\"IncorrectAmounts()\":[{\"notice\":\"thrown if the decay direction is incorrect - for DutchInput, startAmount must be less than or equal toendAmount - for DutchOutput, startAmount must be greater than or equal to endAmount\"}],\"InputAndOutputDecay()\":[{\"notice\":\"Thrown when an order's inputs and outputs both decay.\"}],\"InvalidFeeToken(address)\":[{\"notice\":\"thrown if a fee output token does not have a corresponding non-fee output\"}],\"InvalidOutLength()\":[{\"notice\":\"Thrown when 'outputs' array's length != 1.\"}],\"InvalidReactor()\":[{\"notice\":\"thrown when the order targets a different reactor\"}],\"InvalidThreshold()\":[{\"notice\":\"Thrown, if threshold isn't in a valid range.\"}],\"NativeTransferFailed()\":[{\"notice\":\"Thrown when a native transfer fails\"}],\"NoExclusiveOverride()\":[{\"notice\":\"thrown when an order has strict exclusivity and the filler does not have it\"}],\"OrderEndTimeBeforeStartTime()\":[{\"notice\":\"Thrown when an order's end time is before its start time.\"}],\"PartialFillOverflow()\":[{\"notice\":\"Thrown, if calculated parts of in/out > initial amounts.\"}],\"PartialFillUnderflow()\":[{\"notice\":\"Thrown, if calculated parts are equal to 0.\"}],\"QuantityLtThreshold()\":[{\"notice\":\"Thrown, if 'quantity' to take from an order, is less than order's threshold.\"}],\"RelativeErrTooBig()\":[{\"notice\":\"Thrown, when a rounding error, implies into a precision loss of >0.1%\"}]},\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"notice\":\"emitted when an order is filled\"}},\"kind\":\"user\",\"methods\":{\"execute((bytes,bytes),uint256)\":{\"notice\":\"Execute part of a single order, specified in 'quantity'.\"},\"executeBatch((bytes,bytes)[],uint256[])\":{\"notice\":\"Execute parts of the given orders at once.\"},\"executeBatchWithCallback((bytes,bytes)[],uint256[],bytes)\":{\"notice\":\"Execute parts of the given orders at once using a callback with the given callback data.\"},\"executeWithCallback((bytes,bytes),uint256,bytes)\":{\"notice\":\"Execute part of a single order using the given callback data.\"},\"permit2()\":{\"notice\":\"permit2 address used for token transfers and signature verification\"},\"setProtocolFeeController(address)\":{\"notice\":\"sets the protocol fee controller\"}},\"notice\":\"Reactor for exclusive Dutch orders (aka Gladius Orders).         The main differences between 'GladiusOrder' and 'ExclusiveDutchOrder' are:         * 'GladiusOrder' supports partial fills         * 'GladiusOrder' allows only 1 element in 'outputs' array.         * 'GladiusOrder' in/out amounts additionally resolved, based on           'quantity' argument, passed to 'execute' functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reactors/GladiusReactor.sol\":\"GladiusReactor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xf0b237a5c50fa3f154ca017ea5990518af22a19c807791ec9a33dce33aac60d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e120feb8c2120db016f9199f68c7e16a0d360aa5ae1e402caca607c364c67cb\",\"dweb:/ipfs/QmTXYteFyV9RytG6DE8S21Hd8a36xduPvT5rSnWKZvyPzb\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0xc5f008acd831f9383ce63163c1ac5cbc6ac399900e1ebf725f97ba6e929a256f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e93f4a3c64c10771750c24a6af0c8492a6a8402c50fe366001d6ecf14eccd4d5\",\"dweb:/ipfs/QmbhDicBdos6hsjkcvsrptyJcm1XKS2XWL2z6vApktCry7\"]},\"src/interfaces/IGladiusReactor.sol\":{\"keccak256\":\"0x402883768537e02d347fa15fe85182d6637be21d98278bd16f3cead534c2eaf3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0bf975385903f32eb5a65daba928c018ab46ab9891a3178c9870771d83c0461\",\"dweb:/ipfs/QmdpcuY4Bp1suPMDC81ifGbgNGeoCHqF15nn1GErDiNYqL\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c\",\"dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0\",\"dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344\",\"dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3\",\"dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq\"]},\"src/lib/DSAuth.sol\":{\"keccak256\":\"0x4f7a8cbd4eda7bba42dced1050350f1a13282f58a4778b975626450fd745cdcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df300ba2eb552fe266c62fbe4de07a44df987ecd7474306039aa45b37fcdab55\",\"dweb:/ipfs/Qmaqud6TUKVxsCq4ThJCWvRYJcvvUFtNWtMZgFTQZU8N3d\"]},\"src/lib/DutchDecayLib.sol\":{\"keccak256\":\"0x9420c4b51038982150cb90fb21a3cabd807b6884978dafcf393d17726f12a8de\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4469bd4e6d0fbfd225f3b1ac8b9bc903f3b6d6111de76261435407ca9cf19010\",\"dweb:/ipfs/QmcU2S5sfmYhfMrqtpTnzw8U91w1GSgRaa5oxJAqbdr1Y8\"]},\"src/lib/DutchOrderLib.sol\":{\"keccak256\":\"0xdd6b9bffcc044899fac52e1e9cbe4becc7a40b56d912695e80600224367235e6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78c08ec074bc21ce610f2e0c3594b383e0cd2301c32239146a771e2e5d2cb975\",\"dweb:/ipfs/QmbMQwT9k3RWyTdihqqnu3RDiRCz1XmpMUVwxeyWzChKB5\"]},\"src/lib/ExclusiveDutchOrderLib.sol\":{\"keccak256\":\"0x3e21caa4af8c032280b5d84a2e673f7d0a7c9b42758c52fef7e669282c445f20\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3cf71f86364d42acb5a3c24c8f21f400975dbd32c19fa3c56ee17dfbb8c9ffb0\",\"dweb:/ipfs/QmURuzWqzfBToKj9u28xXYT4bTHNhNBWJfaj8j8M1jZUx8\"]},\"src/lib/ExclusivityOverrideLib.sol\":{\"keccak256\":\"0xbb9a0624865450412cd3c4c841fc55ef4ee46d26376112b89274f6cad14718c5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7ef62d3c1f9eb4db41d3b9a20c756a24f6b95b232a71b5f560a2ce9817eda544\",\"dweb:/ipfs/Qmf8qZLVNAMbssWqs3yi3NK13arT3Ksk51QbqJSX8UYrA1\"]},\"src/lib/OrderInfoLib.sol\":{\"keccak256\":\"0x38672b528e63dc53f36ed82d0037110a9f5893ad0a3957e24f19fa3fdbd80015\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://147172dbebf4bb579bc392f25666645719264c0b47378f7fc4f3a95c79bdf5a4\",\"dweb:/ipfs/Qmd5wVnQ8rKHHQgUQzEDcAPiqrVzmNr9t2D7d1SqUg9hTo\"]},\"src/lib/PartialFillLib.sol\":{\"keccak256\":\"0x6ca92bc356561b50c45ea1feb335bd13d3c810d1e1391a9e3062aade03653665\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1eca41420b4f4b529310cc8f2deaf2f6ad0cd991c19db30dc44e3fa8bb6ac5f3\",\"dweb:/ipfs/QmP1kV6gBEoXCGJoWMTPrJ2x4kUbn6412iyPVdHSkKhYXi\"]},\"src/lib/Permit2Lib.sol\":{\"keccak256\":\"0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507\",\"dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x5066dd0888221a2ba0abbab1beb0f63df1de941d0433c1a033a40c778de2680d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59cd1e1c06467fb3ce957efb04abf0c19b43eb340f96eb36eee0496f6c5c6d08\",\"dweb:/ipfs/QmQLPiyyLvxPd4tHpDezMAkDY2qjy8BBH1sx6pVzaW8utA\"]},\"src/reactors/BaseGladiusReactor.sol\":{\"keccak256\":\"0x865ba5857f7c3ac0768276ed41b00b11851d2370bc82b6d754012182cb66a4e2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://327d41a4049d17848ee1eebed4b001958f94fb1e58f1e5145cebdb09e21d41aa\",\"dweb:/ipfs/QmRsmfBT48tLs24bJr3bfs3VSrMxTA3LyVfbSxEPtw7t3M\"]},\"src/reactors/GladiusReactor.sol\":{\"keccak256\":\"0x24a422c6665bda9079b80e5d77aca888b262fdb5feba59a0c5e503e10549ba4f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85416a0058b31762ca7fa5d0bbaa60e5f364017f1367f484579b2c3d6eb026e9\",\"dweb:/ipfs/QmRMSguZGsTgS53emxbr4KbZk9G9u5ppJFwonkm1fs5evh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineBeforeEndTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "duplicateToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DuplicateFeeOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeStartTime"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FeeTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAndOutputDecay"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientEth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidFeeToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOutLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoExclusiveOverride"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderEndTimeBeforeStartTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PartialFillOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PartialFillUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "QuantityLtThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RelativeErrTooBig"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "swapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Fill",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LogSetOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldFeeController",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newFeeController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "quantities",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "quantities",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatchWithCallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeWithCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeController",
          "outputs": [
            {
              "internalType": "contract IProtocolFeeController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IPermit2",
              "name": "_permit2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "contract IPermit2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFeeController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute((bytes,bytes),uint256)": {
            "params": {
              "order": "The order definition and valid signature to execute.",
              "quantity": "An amount in a form of input token, to take from the order."
            }
          },
          "executeBatch((bytes,bytes)[],uint256[])": {
            "params": {
              "orders": "The order definitions and valid signatures to execute.",
              "quantities": "Amounts in a form of input tokens, to take from orders."
            }
          },
          "executeBatchWithCallback((bytes,bytes)[],uint256[],bytes)": {
            "params": {
              "callbackData": "The 'callbackData' to pass to the callback.",
              "orders": "The order definitions and valid signatures to execute.",
              "quantities": "Amounts in a form of input tokens, to take from orders."
            }
          },
          "executeWithCallback((bytes,bytes),uint256,bytes)": {
            "params": {
              "callbackData": "The 'callbackData' to pass to the callback.",
              "order": "The order definition and valid signature to execute.",
              "quantity": "An amount in a form of input token, to take from the order."
            }
          },
          "setProtocolFeeController(address)": {
            "details": "only callable by the owner",
            "params": {
              "_newFeeController": "the new fee controller"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute((bytes,bytes),uint256)": {
            "notice": "Execute part of a single order, specified in 'quantity'."
          },
          "executeBatch((bytes,bytes)[],uint256[])": {
            "notice": "Execute parts of the given orders at once."
          },
          "executeBatchWithCallback((bytes,bytes)[],uint256[],bytes)": {
            "notice": "Execute parts of the given orders at once using a callback with the given callback data."
          },
          "executeWithCallback((bytes,bytes),uint256,bytes)": {
            "notice": "Execute part of a single order using the given callback data."
          },
          "permit2()": {
            "notice": "permit2 address used for token transfers and signature verification"
          },
          "setProtocolFeeController(address)": {
            "notice": "sets the protocol fee controller"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/",
        "solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/reactors/GladiusReactor.sol": "GladiusReactor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xf0b237a5c50fa3f154ca017ea5990518af22a19c807791ec9a33dce33aac60d6",
        "urls": [
          "bzz-raw://5e120feb8c2120db016f9199f68c7e16a0d360aa5ae1e402caca607c364c67cb",
          "dweb:/ipfs/QmTXYteFyV9RytG6DE8S21Hd8a36xduPvT5rSnWKZvyPzb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0xc5f008acd831f9383ce63163c1ac5cbc6ac399900e1ebf725f97ba6e929a256f",
        "urls": [
          "bzz-raw://e93f4a3c64c10771750c24a6af0c8492a6a8402c50fe366001d6ecf14eccd4d5",
          "dweb:/ipfs/QmbhDicBdos6hsjkcvsrptyJcm1XKS2XWL2z6vApktCry7"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IGladiusReactor.sol": {
        "keccak256": "0x402883768537e02d347fa15fe85182d6637be21d98278bd16f3cead534c2eaf3",
        "urls": [
          "bzz-raw://a0bf975385903f32eb5a65daba928c018ab46ab9891a3178c9870771d83c0461",
          "dweb:/ipfs/QmdpcuY4Bp1suPMDC81ifGbgNGeoCHqF15nn1GErDiNYqL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c",
        "urls": [
          "bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c",
          "dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101",
        "urls": [
          "bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0",
          "dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1",
        "urls": [
          "bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344",
          "dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6",
        "urls": [
          "bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3",
          "dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DSAuth.sol": {
        "keccak256": "0x4f7a8cbd4eda7bba42dced1050350f1a13282f58a4778b975626450fd745cdcd",
        "urls": [
          "bzz-raw://df300ba2eb552fe266c62fbe4de07a44df987ecd7474306039aa45b37fcdab55",
          "dweb:/ipfs/Qmaqud6TUKVxsCq4ThJCWvRYJcvvUFtNWtMZgFTQZU8N3d"
        ],
        "license": "MIT"
      },
      "src/lib/DutchDecayLib.sol": {
        "keccak256": "0x9420c4b51038982150cb90fb21a3cabd807b6884978dafcf393d17726f12a8de",
        "urls": [
          "bzz-raw://4469bd4e6d0fbfd225f3b1ac8b9bc903f3b6d6111de76261435407ca9cf19010",
          "dweb:/ipfs/QmcU2S5sfmYhfMrqtpTnzw8U91w1GSgRaa5oxJAqbdr1Y8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchOrderLib.sol": {
        "keccak256": "0xdd6b9bffcc044899fac52e1e9cbe4becc7a40b56d912695e80600224367235e6",
        "urls": [
          "bzz-raw://78c08ec074bc21ce610f2e0c3594b383e0cd2301c32239146a771e2e5d2cb975",
          "dweb:/ipfs/QmbMQwT9k3RWyTdihqqnu3RDiRCz1XmpMUVwxeyWzChKB5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusiveDutchOrderLib.sol": {
        "keccak256": "0x3e21caa4af8c032280b5d84a2e673f7d0a7c9b42758c52fef7e669282c445f20",
        "urls": [
          "bzz-raw://3cf71f86364d42acb5a3c24c8f21f400975dbd32c19fa3c56ee17dfbb8c9ffb0",
          "dweb:/ipfs/QmURuzWqzfBToKj9u28xXYT4bTHNhNBWJfaj8j8M1jZUx8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusivityOverrideLib.sol": {
        "keccak256": "0xbb9a0624865450412cd3c4c841fc55ef4ee46d26376112b89274f6cad14718c5",
        "urls": [
          "bzz-raw://7ef62d3c1f9eb4db41d3b9a20c756a24f6b95b232a71b5f560a2ce9817eda544",
          "dweb:/ipfs/Qmf8qZLVNAMbssWqs3yi3NK13arT3Ksk51QbqJSX8UYrA1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/OrderInfoLib.sol": {
        "keccak256": "0x38672b528e63dc53f36ed82d0037110a9f5893ad0a3957e24f19fa3fdbd80015",
        "urls": [
          "bzz-raw://147172dbebf4bb579bc392f25666645719264c0b47378f7fc4f3a95c79bdf5a4",
          "dweb:/ipfs/Qmd5wVnQ8rKHHQgUQzEDcAPiqrVzmNr9t2D7d1SqUg9hTo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/PartialFillLib.sol": {
        "keccak256": "0x6ca92bc356561b50c45ea1feb335bd13d3c810d1e1391a9e3062aade03653665",
        "urls": [
          "bzz-raw://1eca41420b4f4b529310cc8f2deaf2f6ad0cd991c19db30dc44e3fa8bb6ac5f3",
          "dweb:/ipfs/QmP1kV6gBEoXCGJoWMTPrJ2x4kUbn6412iyPVdHSkKhYXi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/Permit2Lib.sol": {
        "keccak256": "0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb",
        "urls": [
          "bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507",
          "dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x5066dd0888221a2ba0abbab1beb0f63df1de941d0433c1a033a40c778de2680d",
        "urls": [
          "bzz-raw://59cd1e1c06467fb3ce957efb04abf0c19b43eb340f96eb36eee0496f6c5c6d08",
          "dweb:/ipfs/QmQLPiyyLvxPd4tHpDezMAkDY2qjy8BBH1sx6pVzaW8utA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseGladiusReactor.sol": {
        "keccak256": "0x865ba5857f7c3ac0768276ed41b00b11851d2370bc82b6d754012182cb66a4e2",
        "urls": [
          "bzz-raw://327d41a4049d17848ee1eebed4b001958f94fb1e58f1e5145cebdb09e21d41aa",
          "dweb:/ipfs/QmRsmfBT48tLs24bJr3bfs3VSrMxTA3LyVfbSxEPtw7t3M"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/GladiusReactor.sol": {
        "keccak256": "0x24a422c6665bda9079b80e5d77aca888b262fdb5feba59a0c5e503e10549ba4f",
        "urls": [
          "bzz-raw://85416a0058b31762ca7fa5d0bbaa60e5f364017f1367f484579b2c3d6eb026e9",
          "dweb:/ipfs/QmRMSguZGsTgS53emxbr4KbZk9G9u5ppJFwonkm1fs5evh"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/reactors/GladiusReactor.sol",
    "id": 41086,
    "exportedSymbols": {
      "BaseGladiusReactor": [
        39937
      ],
      "DutchDecayLib": [
        38314
      ],
      "DutchInput": [
        38339
      ],
      "DutchOutput": [
        38331
      ],
      "ExclusivityOverrideLib": [
        38770
      ],
      "GladiusOrder": [
        39020
      ],
      "GladiusReactor": [
        41085
      ],
      "InputToken": [
        37359
      ],
      "OutputToken": [
        37366
      ],
      "PartialFillLib": [
        39295
      ],
      "Permit2Lib": [
        39359
      ],
      "ResolvedOrder": [
        37381
      ],
      "SignedOrder": [
        37386
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:4325:82",
    "nodes": [
      {
        "id": 40840,
        "nodeType": "PragmaDirective",
        "src": "45:23:82",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 40845,
        "nodeType": "ImportDirective",
        "src": "70:95:82",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 37387,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40841,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37386,
              "src": "78:11:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40842,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37381,
              "src": "91:13:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40843,
              "name": "InputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37359,
              "src": "106:10:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40844,
              "name": "OutputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37366,
              "src": "118:11:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40848,
        "nodeType": "ImportDirective",
        "src": "166:74:82",
        "nodes": [],
        "absolutePath": "src/lib/ExclusiveDutchOrderLib.sol",
        "file": "../lib/ExclusiveDutchOrderLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 38651,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40846,
              "name": "DutchOutput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38331,
              "src": "174:11:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40847,
              "name": "DutchInput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38339,
              "src": "187:10:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40850,
        "nodeType": "ImportDirective",
        "src": "241:73:82",
        "nodes": [],
        "absolutePath": "src/lib/ExclusivityOverrideLib.sol",
        "file": "../lib/ExclusivityOverrideLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 38771,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40849,
              "name": "ExclusivityOverrideLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38770,
              "src": "249:22:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40853,
        "nodeType": "ImportDirective",
        "src": "315:71:82",
        "nodes": [],
        "absolutePath": "src/lib/PartialFillLib.sol",
        "file": "../lib/PartialFillLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 39296,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40851,
              "name": "PartialFillLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39295,
              "src": "323:14:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40852,
              "name": "GladiusOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39020,
              "src": "339:12:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40855,
        "nodeType": "ImportDirective",
        "src": "387:60:82",
        "nodes": [],
        "absolutePath": "src/reactors/BaseGladiusReactor.sol",
        "file": "./BaseGladiusReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 39938,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40854,
              "name": "BaseGladiusReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39937,
              "src": "395:18:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40857,
        "nodeType": "ImportDirective",
        "src": "448:55:82",
        "nodes": [],
        "absolutePath": "src/lib/DutchDecayLib.sol",
        "file": "../lib/DutchDecayLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 38315,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40856,
              "name": "DutchDecayLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38314,
              "src": "456:13:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40859,
        "nodeType": "ImportDirective",
        "src": "504:49:82",
        "nodes": [],
        "absolutePath": "src/lib/Permit2Lib.sol",
        "file": "../lib/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41086,
        "sourceUnit": 39360,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40858,
              "name": "Permit2Lib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39359,
              "src": "512:10:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41085,
        "nodeType": "ContractDefinition",
        "src": "976:3393:82",
        "nodes": [
          {
            "id": 40866,
            "nodeType": "UsingForDirective",
            "src": "1028:47:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40863,
              "name": "ExclusivityOverrideLib",
              "nameLocations": [
                "1034:22:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38770,
              "src": "1034:22:82"
            },
            "typeName": {
              "id": 40865,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40864,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1061:13:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37381,
                "src": "1061:13:82"
              },
              "referencedDeclaration": 37381,
              "src": "1061:13:82",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 40870,
            "nodeType": "UsingForDirective",
            "src": "1080:38:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40867,
              "name": "PartialFillLib",
              "nameLocations": [
                "1086:14:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39295,
              "src": "1086:14:82"
            },
            "typeName": {
              "id": 40869,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40868,
                "name": "GladiusOrder",
                "nameLocations": [
                  "1105:12:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39020,
                "src": "1105:12:82"
              },
              "referencedDeclaration": 39020,
              "src": "1105:12:82",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GladiusOrder_$39020_storage_ptr",
                "typeString": "struct GladiusOrder"
              }
            }
          },
          {
            "id": 40875,
            "nodeType": "UsingForDirective",
            "src": "1123:38:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40871,
              "name": "DutchDecayLib",
              "nameLocations": [
                "1129:13:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38314,
              "src": "1129:13:82"
            },
            "typeName": {
              "baseType": {
                "id": 40873,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40872,
                  "name": "DutchOutput",
                  "nameLocations": [
                    "1147:11:82"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38331,
                  "src": "1147:11:82"
                },
                "referencedDeclaration": 38331,
                "src": "1147:11:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DutchOutput_$38331_storage_ptr",
                  "typeString": "struct DutchOutput"
                }
              },
              "id": 40874,
              "nodeType": "ArrayTypeName",
              "src": "1147:13:82",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$38331_storage_$dyn_storage_ptr",
                "typeString": "struct DutchOutput[]"
              }
            }
          },
          {
            "id": 40879,
            "nodeType": "UsingForDirective",
            "src": "1166:35:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40876,
              "name": "DutchDecayLib",
              "nameLocations": [
                "1172:13:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38314,
              "src": "1172:13:82"
            },
            "typeName": {
              "id": 40878,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40877,
                "name": "DutchInput",
                "nameLocations": [
                  "1190:10:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38339,
                "src": "1190:10:82"
              },
              "referencedDeclaration": 38339,
              "src": "1190:10:82",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DutchInput_$38339_storage_ptr",
                "typeString": "struct DutchInput"
              }
            }
          },
          {
            "id": 40883,
            "nodeType": "UsingForDirective",
            "src": "1206:35:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40880,
              "name": "Permit2Lib",
              "nameLocations": [
                "1212:10:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39359,
              "src": "1212:10:82"
            },
            "typeName": {
              "id": 40882,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40881,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1227:13:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37381,
                "src": "1227:13:82"
              },
              "referencedDeclaration": 37381,
              "src": "1227:13:82",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 40886,
            "nodeType": "UsingForDirective",
            "src": "1246:33:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40884,
              "name": "PartialFillLib",
              "nameLocations": [
                "1252:14:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39295,
              "src": "1252:14:82"
            },
            "typeName": {
              "id": 40885,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1271:7:82",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 40889,
            "nodeType": "ErrorDefinition",
            "src": "1344:25:82",
            "nodes": [],
            "documentation": {
              "id": 40887,
              "nodeType": "StructuredDocumentation",
              "src": "1285:54:82",
              "text": "@notice Thrown when 'outputs' array's length != 1."
            },
            "errorSelector": "b85df396",
            "name": "InvalidOutLength",
            "nameLocation": "1350:16:82",
            "parameters": {
              "id": 40888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:2:82"
            }
          },
          {
            "id": 40892,
            "nodeType": "ErrorDefinition",
            "src": "1446:30:82",
            "nodes": [],
            "documentation": {
              "id": 40890,
              "nodeType": "StructuredDocumentation",
              "src": "1374:67:82",
              "text": "@notice Thrown when an order's deadline is before its end time."
            },
            "errorSelector": "773a6187",
            "name": "DeadlineBeforeEndTime",
            "nameLocation": "1452:21:82",
            "parameters": {
              "id": 40891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:2:82"
            }
          },
          {
            "id": 40895,
            "nodeType": "ErrorDefinition",
            "src": "1555:36:82",
            "nodes": [],
            "documentation": {
              "id": 40893,
              "nodeType": "StructuredDocumentation",
              "src": "1481:69:82",
              "text": "@notice Thrown when an order's end time is before its start time."
            },
            "errorSelector": "48fee69c",
            "name": "OrderEndTimeBeforeStartTime",
            "nameLocation": "1561:27:82",
            "parameters": {
              "id": 40894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:2:82"
            }
          },
          {
            "id": 40898,
            "nodeType": "ErrorDefinition",
            "src": "1666:28:82",
            "nodes": [],
            "documentation": {
              "id": 40896,
              "nodeType": "StructuredDocumentation",
              "src": "1596:65:82",
              "text": "@notice Thrown when an order's inputs and outputs both decay."
            },
            "errorSelector": "d303758b",
            "name": "InputAndOutputDecay",
            "nameLocation": "1672:19:82",
            "parameters": {
              "id": 40897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1691:2:82"
            }
          },
          {
            "id": 40991,
            "nodeType": "FunctionDefinition",
            "src": "1846:1162:82",
            "nodes": [],
            "body": {
              "id": 40990,
              "nodeType": "Block",
              "src": "2005:1003:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40913,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2035:5:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 40990,
                      "src": "2015:25:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                        "typeString": "struct GladiusOrder"
                      },
                      "typeName": {
                        "id": 40912,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40911,
                          "name": "GladiusOrder",
                          "nameLocations": [
                            "2015:12:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39020,
                          "src": "2015:12:82"
                        },
                        "referencedDeclaration": 39020,
                        "src": "2015:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GladiusOrder_$39020_storage_ptr",
                          "typeString": "struct GladiusOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40921,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40916,
                          "name": "signedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40902,
                          "src": "2067:11:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$37386_calldata_ptr",
                            "typeString": "struct SignedOrder calldata"
                          }
                        },
                        "id": 40917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2079:5:82",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37383,
                        "src": "2067:17:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 40918,
                            "name": "GladiusOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39020,
                            "src": "2099:12:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GladiusOrder_$39020_storage_ptr_$",
                              "typeString": "type(struct GladiusOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 40919,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2098:14:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GladiusOrder_$39020_storage_ptr_$",
                          "typeString": "type(struct GladiusOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_GladiusOrder_$39020_storage_ptr_$",
                          "typeString": "type(struct GladiusOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 40914,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2043:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 40915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2047:6:82",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2043:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 40920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:79:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                      "typeString": "struct GladiusOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2015:107:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40923,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40913,
                        "src": "2148:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                          "typeString": "struct GladiusOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                          "typeString": "struct GladiusOrder memory"
                        }
                      ],
                      "id": 40922,
                      "name": "_validateOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41084,
                      "src": "2133:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_GladiusOrder_$39020_memory_ptr_$returns$__$",
                        "typeString": "function (struct GladiusOrder memory) pure"
                      }
                    },
                    "id": 40924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:21:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40925,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:21:82"
                },
                {
                  "assignments": [
                    40929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40929,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "2222:5:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 40990,
                      "src": "2204:23:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                        "typeString": "struct InputToken"
                      },
                      "typeName": {
                        "id": 40928,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40927,
                          "name": "InputToken",
                          "nameLocations": [
                            "2204:10:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37359,
                          "src": "2204:10:82"
                        },
                        "referencedDeclaration": 37359,
                        "src": "2204:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InputToken_$37359_storage_ptr",
                          "typeString": "struct InputToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Apply decay function.",
                  "id": 40938,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40933,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2261:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40934,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2267:14:82",
                        "memberName": "decayStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39004,
                        "src": "2261:20:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 40935,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2295:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40936,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2301:12:82",
                        "memberName": "decayEndTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39006,
                        "src": "2295:18:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 40930,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2230:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40931,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2236:5:82",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39013,
                        "src": "2230:11:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$38339_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 40932,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2242:5:82",
                      "memberName": "decay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38313,
                      "src": "2230:17:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_DutchInput_$38339_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_InputToken_$37359_memory_ptr_$attached_to$_t_struct$_DutchInput_$38339_memory_ptr_$",
                        "typeString": "function (struct DutchInput memory,uint256,uint256) view returns (struct InputToken memory)"
                      }
                    },
                    "id": 40937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:93:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                      "typeString": "struct InputToken memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2204:119:82"
                },
                {
                  "assignments": [
                    40943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40943,
                      "mutability": "mutable",
                      "name": "outputs",
                      "nameLocation": "2354:7:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 40990,
                      "src": "2333:28:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OutputToken[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40941,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40940,
                            "name": "OutputToken",
                            "nameLocations": [
                              "2333:11:82"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37366,
                            "src": "2333:11:82"
                          },
                          "referencedDeclaration": 37366,
                          "src": "2333:11:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OutputToken_$37366_storage_ptr",
                            "typeString": "struct OutputToken"
                          }
                        },
                        "id": 40942,
                        "nodeType": "ArrayTypeName",
                        "src": "2333:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_storage_$dyn_storage_ptr",
                          "typeString": "struct OutputToken[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40952,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40947,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2397:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40948,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2403:14:82",
                        "memberName": "decayStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39004,
                        "src": "2397:20:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 40949,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2431:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40950,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2437:12:82",
                        "memberName": "decayEndTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39006,
                        "src": "2431:18:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 40944,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2364:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40945,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2370:7:82",
                        "memberName": "outputs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39017,
                        "src": "2364:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DutchOutput_$38331_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DutchOutput memory[] memory"
                        }
                      },
                      "id": 40946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2378:5:82",
                      "memberName": "decay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38266,
                      "src": "2364:19:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_DutchOutput_$38331_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_struct$_DutchOutput_$38331_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct DutchOutput memory[] memory,uint256,uint256) view returns (struct OutputToken memory[] memory)"
                      }
                    },
                    "id": 40951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:95:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OutputToken memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2333:126:82"
                },
                {
                  "documentation": "@dev Apply partition function.",
                  "expression": {
                    "id": 40963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 40953,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40929,
                          "src": "2514:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                            "typeString": "struct InputToken memory"
                          }
                        },
                        {
                          "id": 40954,
                          "name": "outputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40943,
                          "src": "2521:7:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          }
                        }
                      ],
                      "id": 40955,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2513:16:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_InputToken_$37359_memory_ptr_$_t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(struct InputToken memory,struct OutputToken memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40958,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40929,
                          "src": "2569:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                            "typeString": "struct InputToken memory"
                          }
                        },
                        {
                          "id": 40959,
                          "name": "outputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40943,
                          "src": "2588:7:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 40960,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40913,
                            "src": "2609:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                              "typeString": "struct GladiusOrder memory"
                            }
                          },
                          "id": 40961,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2615:13:82",
                          "memberName": "fillThreshold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39019,
                          "src": "2609:19:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                            "typeString": "struct InputToken memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 40956,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40904,
                          "src": "2532:8:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2541:14:82",
                        "memberName": "applyPartition",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39166,
                        "src": "2532:23:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_struct$_InputToken_$37359_memory_ptr_$_t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_struct$_InputToken_$37359_memory_ptr_$_t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,struct InputToken memory,struct OutputToken memory[] memory,uint256) pure returns (struct InputToken memory,struct OutputToken memory[] memory)"
                        }
                      },
                      "id": 40962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2532:106:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_InputToken_$37359_memory_ptr_$_t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(struct InputToken memory,struct OutputToken memory[] memory)"
                      }
                    },
                    "src": "2513:125:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40964,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:125:82"
                },
                {
                  "expression": {
                    "id": 40977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40965,
                      "name": "resolvedOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40909,
                      "src": "2649:13:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 40967,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40913,
                            "src": "2699:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                              "typeString": "struct GladiusOrder memory"
                            }
                          },
                          "id": 40968,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2705:4:82",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39002,
                          "src": "2699:10:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$37351_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        {
                          "id": 40969,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40929,
                          "src": "2730:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                            "typeString": "struct InputToken memory"
                          }
                        },
                        {
                          "id": 40970,
                          "name": "outputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40943,
                          "src": "2758:7:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 40971,
                            "name": "signedOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40902,
                            "src": "2784:11:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignedOrder_$37386_calldata_ptr",
                              "typeString": "struct SignedOrder calldata"
                            }
                          },
                          "id": 40972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2796:3:82",
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37385,
                          "src": "2784:15:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 40973,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40913,
                              "src": "2819:5:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                                "typeString": "struct GladiusOrder memory"
                              }
                            },
                            "id": 40974,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2825:4:82",
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39294,
                            "src": "2819:10:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_GladiusOrder_$39020_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_GladiusOrder_$39020_memory_ptr_$",
                              "typeString": "function (struct GladiusOrder memory) pure returns (bytes32)"
                            }
                          },
                          "id": 40975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:12:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderInfo_$37351_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_InputToken_$37359_memory_ptr",
                            "typeString": "struct InputToken memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$37366_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 40966,
                        "name": "ResolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37381,
                        "src": "2665:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$37381_storage_ptr_$",
                          "typeString": "type(struct ResolvedOrder storage pointer)"
                        }
                      },
                      "id": 40976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2693:4:82",
                        "2723:5:82",
                        "2749:7:82",
                        "2779:3:82",
                        "2813:4:82"
                      ],
                      "names": [
                        "info",
                        "input",
                        "outputs",
                        "sig",
                        "hash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2665:177:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "src": "2649:193:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "id": 40978,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:193:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40982,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2894:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2900:15:82",
                        "memberName": "exclusiveFiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39008,
                        "src": "2894:21:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 40984,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2929:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40985,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2935:14:82",
                        "memberName": "decayStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39004,
                        "src": "2929:20:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 40986,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40913,
                          "src": "2963:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 40987,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2969:22:82",
                        "memberName": "exclusivityOverrideBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39010,
                        "src": "2963:28:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40979,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40909,
                        "src": "2852:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 40981,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2866:14:82",
                      "memberName": "handleOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38741,
                      "src": "2852:28:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$37381_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$attached_to$_t_struct$_ResolvedOrder_$37381_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory,address,uint256,uint256) view"
                      }
                    },
                    "id": 40988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:149:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40989,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:149:82"
                }
              ]
            },
            "baseFunctions": [
              39927
            ],
            "documentation": {
              "id": 40899,
              "nodeType": "StructuredDocumentation",
              "src": "1700:141:82",
              "text": "@notice Resolves order into a 'GladiusOrder' and applies a decay\n         function and a partition function on its in/out amounts."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolve",
            "nameLocation": "1855:7:82",
            "overrides": {
              "id": 40906,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1951:8:82"
            },
            "parameters": {
              "id": 40905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40902,
                  "mutability": "mutable",
                  "name": "signedOrder",
                  "nameLocation": "1893:11:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 40991,
                  "src": "1872:32:82",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$37386_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 40901,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40900,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "1872:11:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37386,
                      "src": "1872:11:82"
                    },
                    "referencedDeclaration": 37386,
                    "src": "1872:11:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$37386_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40904,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1922:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 40991,
                  "src": "1914:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1862:74:82"
            },
            "returnParameters": {
              "id": 40910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40909,
                  "mutability": "mutable",
                  "name": "resolvedOrder",
                  "nameLocation": "1990:13:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 40991,
                  "src": "1969:34:82",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 40908,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40907,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1969:13:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37381,
                      "src": "1969:13:82"
                    },
                    "referencedDeclaration": 37381,
                    "src": "1969:13:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:36:82"
            },
            "scope": 41085,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41023,
            "nodeType": "FunctionDefinition",
            "src": "3053:364:82",
            "nodes": [],
            "body": {
              "id": 41022,
              "nodeType": "Block",
              "src": "3162:255:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41004,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40995,
                            "src": "3219:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 41005,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3225:8:82",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39337,
                          "src": "3219:14:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$37381_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$35440_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$37381_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 41006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3219:16:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$35440_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41009,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40997,
                            "src": "3271:2:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 41007,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40995,
                            "src": "3249:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 41008,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3255:15:82",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39358,
                          "src": "3249:21:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$37381_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$35445_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$37381_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 41010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3249:25:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$35445_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 41011,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40995,
                            "src": "3288:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 41012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3294:4:82",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37369,
                          "src": "3288:10:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$37351_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 41013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3299:7:82",
                        "memberName": "swapper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37341,
                        "src": "3288:18:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 41014,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40995,
                          "src": "3320:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 41015,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3326:4:82",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37380,
                        "src": "3320:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 41016,
                          "name": "PartialFillLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39295,
                          "src": "3344:14:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PartialFillLib_$39295_$",
                            "typeString": "type(library PartialFillLib)"
                          }
                        },
                        "id": 41017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3359:18:82",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39096,
                        "src": "3344:33:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 41018,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40995,
                          "src": "3391:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 41019,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3397:3:82",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37378,
                        "src": "3391:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$35440_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$35445_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 41001,
                        "name": "permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39489,
                        "src": "3172:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$35403",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 41003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3180:25:82",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35496,
                      "src": "3172:33:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$35440_memory_ptr_$_t_struct$_SignatureTransferDetails_$35445_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 41020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:238:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41021,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:238:82"
                }
              ]
            },
            "baseFunctions": [
              39936
            ],
            "documentation": {
              "id": 40992,
              "nodeType": "StructuredDocumentation",
              "src": "3014:34:82",
              "text": "@inheritdoc BaseGladiusReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInputTokens",
            "nameLocation": "3062:19:82",
            "overrides": {
              "id": 40999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3153:8:82"
            },
            "parameters": {
              "id": 40998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40995,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3112:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41023,
                  "src": "3091:26:82",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$37381_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 40994,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40993,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "3091:13:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37381,
                      "src": "3091:13:82"
                    },
                    "referencedDeclaration": 37381,
                    "src": "3091:13:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$37381_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40997,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3135:2:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41023,
                  "src": "3127:10:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:62:82"
            },
            "returnParameters": {
              "id": 41000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3162:0:82"
            },
            "scope": 41085,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41084,
            "nodeType": "FunctionDefinition",
            "src": "3811:556:82",
            "nodes": [],
            "body": {
              "id": 41083,
              "nodeType": "Block",
              "src": "3876:491:82",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 41030,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41027,
                          "src": "3890:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 41031,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3896:7:82",
                        "memberName": "outputs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39017,
                        "src": "3890:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DutchOutput_$38331_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DutchOutput memory[] memory"
                        }
                      },
                      "id": 41032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3904:6:82",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3890:20:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 41033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3914:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3890:25:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41038,
                  "nodeType": "IfStatement",
                  "src": "3886:56:82",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41035,
                        "name": "InvalidOutLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40889,
                        "src": "3924:16:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 41036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3924:18:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 41037,
                    "nodeType": "RevertStatement",
                    "src": "3917:25:82"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 41039,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41027,
                          "src": "3957:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 41040,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3963:4:82",
                        "memberName": "info",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39002,
                        "src": "3957:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$37351_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 41041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3968:8:82",
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37345,
                      "src": "3957:19:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41042,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41027,
                        "src": "3979:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                          "typeString": "struct GladiusOrder memory"
                        }
                      },
                      "id": 41043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3985:12:82",
                      "memberName": "decayEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39006,
                      "src": "3979:18:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3957:40:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41048,
                  "nodeType": "IfStatement",
                  "src": "3953:88:82",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41045,
                        "name": "DeadlineBeforeEndTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40892,
                        "src": "4018:21:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 41046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4018:23:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 41047,
                    "nodeType": "RevertStatement",
                    "src": "4011:30:82"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 41049,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41027,
                        "src": "4056:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                          "typeString": "struct GladiusOrder memory"
                        }
                      },
                      "id": 41050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4062:12:82",
                      "memberName": "decayEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39006,
                      "src": "4056:18:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41051,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41027,
                        "src": "4077:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                          "typeString": "struct GladiusOrder memory"
                        }
                      },
                      "id": 41052,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4083:14:82",
                      "memberName": "decayStartTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39004,
                      "src": "4077:20:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4056:41:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41057,
                  "nodeType": "IfStatement",
                  "src": "4052:95:82",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41054,
                        "name": "OrderEndTimeBeforeStartTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40895,
                        "src": "4118:27:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 41055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4118:29:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 41056,
                    "nodeType": "RevertStatement",
                    "src": "4111:36:82"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 41058,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41027,
                          "src": "4162:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 41059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4168:5:82",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39013,
                        "src": "4162:11:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$38339_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 41060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4174:11:82",
                      "memberName": "startAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38336,
                      "src": "4162:23:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 41061,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41027,
                          "src": "4189:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                            "typeString": "struct GladiusOrder memory"
                          }
                        },
                        "id": 41062,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4195:5:82",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39013,
                        "src": "4189:11:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$38339_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 41063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4201:9:82",
                      "memberName": "endAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38338,
                      "src": "4189:21:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4162:48:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41082,
                  "nodeType": "IfStatement",
                  "src": "4158:203:82",
                  "trueBody": {
                    "id": 41081,
                    "nodeType": "Block",
                    "src": "4212:149:82",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 41065,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41027,
                                  "src": "4230:5:82",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                                    "typeString": "struct GladiusOrder memory"
                                  }
                                },
                                "id": 41066,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4236:7:82",
                                "memberName": "outputs",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39017,
                                "src": "4230:13:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_DutchOutput_$38331_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct DutchOutput memory[] memory"
                                }
                              },
                              "id": 41068,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 41067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4244:1:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4230:16:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DutchOutput_$38331_memory_ptr",
                                "typeString": "struct DutchOutput memory"
                              }
                            },
                            "id": 41069,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4247:11:82",
                            "memberName": "startAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38326,
                            "src": "4230:28:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 41070,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41027,
                                  "src": "4262:5:82",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                                    "typeString": "struct GladiusOrder memory"
                                  }
                                },
                                "id": 41071,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4268:7:82",
                                "memberName": "outputs",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39017,
                                "src": "4262:13:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_DutchOutput_$38331_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct DutchOutput memory[] memory"
                                }
                              },
                              "id": 41073,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 41072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4276:1:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4262:16:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DutchOutput_$38331_memory_ptr",
                                "typeString": "struct DutchOutput memory"
                              }
                            },
                            "id": 41074,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4279:9:82",
                            "memberName": "endAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38328,
                            "src": "4262:26:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4230:58:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41080,
                        "nodeType": "IfStatement",
                        "src": "4226:125:82",
                        "trueBody": {
                          "id": 41079,
                          "nodeType": "Block",
                          "src": "4290:61:82",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 41076,
                                  "name": "InputAndOutputDecay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40898,
                                  "src": "4315:19:82",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 41077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4315:21:82",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41078,
                              "nodeType": "RevertStatement",
                              "src": "4308:28:82"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 41024,
              "nodeType": "StructuredDocumentation",
              "src": "3423:383:82",
              "text": "@notice validate order fields:\n - outputs array must contain only 1 element.\n - deadline must be greater than or equal than decayEndTime\n - decayEndTime must be greater than or equal to decayStartTime\n - if there's input decay, outputs must not decay\n - for input decay, startAmount must < endAmount\n @dev Reverts if the order is invalid"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateOrder",
            "nameLocation": "3820:14:82",
            "parameters": {
              "id": 41028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41027,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3855:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41084,
                  "src": "3835:25:82",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GladiusOrder_$39020_memory_ptr",
                    "typeString": "struct GladiusOrder"
                  },
                  "typeName": {
                    "id": 41026,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41025,
                      "name": "GladiusOrder",
                      "nameLocations": [
                        "3835:12:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39020,
                      "src": "3835:12:82"
                    },
                    "referencedDeclaration": 39020,
                    "src": "3835:12:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GladiusOrder_$39020_storage_ptr",
                      "typeString": "struct GladiusOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3834:27:82"
            },
            "returnParameters": {
              "id": 41029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3876:0:82"
            },
            "scope": 41085,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40861,
              "name": "BaseGladiusReactor",
              "nameLocations": [
                "1003:18:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39937,
              "src": "1003:18:82"
            },
            "id": 40862,
            "nodeType": "InheritanceSpecifier",
            "src": "1003:18:82"
          }
        ],
        "canonicalName": "GladiusReactor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 40860,
          "nodeType": "StructuredDocumentation",
          "src": "555:421:82",
          "text": "@notice Reactor for exclusive Dutch orders (aka Gladius Orders).\n         The main differences between 'GladiusOrder' and 'ExclusiveDutchOrder' are:\n         * 'GladiusOrder' supports partial fills\n         * 'GladiusOrder' allows only 1 element in 'outputs' array.\n         * 'GladiusOrder' in/out amounts additionally resolved, based on\n           'quantity' argument, passed to 'execute' functions."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41085,
          39937,
          30720,
          37313,
          38053,
          37998,
          37328,
          37514
        ],
        "name": "GladiusReactor",
        "nameLocation": "985:14:82",
        "scope": 41086,
        "usedErrors": [
          37036,
          37045,
          37050,
          37888,
          38005,
          38070,
          38073,
          38664,
          39036,
          39039,
          39042,
          39045,
          39048,
          39368,
          39371,
          39483,
          39485,
          40889,
          40892,
          40895,
          40898
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 82
}